--- CAnimatedMeshSceneNode.cpp	Sun Jan 04 14:23:44 2015
+++ CAnimatedMeshSceneNode.cpp	Fri Aug 07 20:14:36 2015
@@ -262,7 +262,7 @@
 
 
 //! renders the node.
-void CAnimatedMeshSceneNode::render()
+void CAnimatedMeshSceneNode::render(f32 interpolate)
 {
 	video::IVideoDriver* driver = SceneManager->getVideoDriver();
 
@@ -288,8 +288,9 @@
 		#endif
 	}
 
-	driver->setTransform(video::ETS_WORLD, AbsoluteTransformation);
+	core::matrix4 matr = interpolatedAbsoluteTransform(interpolate);
 
+	driver->setTransform(video::ETS_WORLD, matr);
 	if (Shadow && PassCount==1)
 		Shadow->updateShadowVolumes();
 
@@ -311,7 +312,7 @@
 				if (RenderFromIdentity)
 					driver->setTransform(video::ETS_WORLD, core::IdentityMatrix );
 				else if (Mesh->getMeshType() == EAMT_SKINNED)
-					driver->setTransform(video::ETS_WORLD, AbsoluteTransformation * ((IMeshBuffer*)mb)->getTransformation());
+					driver->setTransform(video::ETS_WORLD, matr * ((IMeshBuffer*)mb)->getTransformation());
 
 				driver->setMaterial(mat);
 				driver->drawMeshBuffer(mb);
@@ -337,7 +338,7 @@
 				if (RenderFromIdentity)
 					driver->setTransform(video::ETS_WORLD, core::IdentityMatrix );
 				else if (Mesh->getMeshType() == EAMT_SKINNED)
-					driver->setTransform(video::ETS_WORLD, AbsoluteTransformation * ((IMeshBuffer*)mb)->getTransformation());
+					driver->setTransform(video::ETS_WORLD, matr * ((IMeshBuffer*)mb)->getTransformation());
 
 				driver->setMaterial(material);
 				driver->drawMeshBuffer(mb);
@@ -345,7 +346,7 @@
 		}
 	}
 
-	driver->setTransform(video::ETS_WORLD, AbsoluteTransformation);
+	driver->setTransform(video::ETS_WORLD, matr);
 
 	// for debug purposes only:
 	if (DebugDataVisible && PassCount==1)
@@ -383,7 +384,7 @@
 				const IMeshBuffer* mb = m->getMeshBuffer(g);
 
 				if (Mesh->getMeshType() == EAMT_SKINNED)
-					driver->setTransform(video::ETS_WORLD, AbsoluteTransformation * ((IMeshBuffer*)mb)->getTransformation());
+					driver->setTransform(video::ETS_WORLD, matr * ((IMeshBuffer*)mb)->getTransformation());
 				driver->draw3DBox(mb->getBoundingBox(), video::SColor(255,190,128,128));
 			}
 		}
@@ -457,7 +458,7 @@
 				if (RenderFromIdentity)
 					driver->setTransform(video::ETS_WORLD, core::IdentityMatrix );
 				else if (Mesh->getMeshType() == EAMT_SKINNED)
-					driver->setTransform(video::ETS_WORLD, AbsoluteTransformation * ((IMeshBuffer*)mb)->getTransformation());
+					driver->setTransform(video::ETS_WORLD, matr * ((IMeshBuffer*)mb)->getTransformation());
 				driver->drawMeshBuffer(mb);
 			}
 		}
--- CAnimatedMeshSceneNode.h	Sun Jan 04 14:23:44 2015
+++ CAnimatedMeshSceneNode.h	Fri Aug 07 20:15:11 2015
@@ -40,7 +40,7 @@
 		virtual void OnAnimate(u32 timeMs) _IRR_OVERRIDE_;
 
 		//! renders the node.
-		virtual void render() _IRR_OVERRIDE_;
+		virtual void render(f32 interpolate=1.f) _IRR_OVERRIDE_;
 
 		//! returns the axis aligned bounding box of this node
 		virtual const core::aabbox3d<f32>& getBoundingBox() const _IRR_OVERRIDE_;
--- CBillboardSceneNode.cpp	Sun Jan 11 21:13:08 2015
+++ CBillboardSceneNode.cpp	Fri Aug 07 20:16:10 2015
@@ -79,7 +79,7 @@
 
 
 //! render
-void CBillboardSceneNode::render()
+void CBillboardSceneNode::render(f32 interpolate)
 {
 	video::IVideoDriver* driver = SceneManager->getVideoDriver();
 	ICameraSceneNode* camera = SceneManager->getActiveCamera();
--- CBillboardSceneNode.h	Sun Jan 04 14:23:44 2015
+++ CBillboardSceneNode.h	Fri Aug 07 20:16:47 2015
@@ -33,7 +33,7 @@
 	virtual void OnRegisterSceneNode() _IRR_OVERRIDE_;
 
 	//! render
-	virtual void render() _IRR_OVERRIDE_;
+	virtual void render(f32 interpolate=1.f) _IRR_OVERRIDE_;
 
 	//! returns the axis aligned bounding box of this node
 	virtual const core::aabbox3d<f32>& getBoundingBox() const _IRR_OVERRIDE_;
--- CCameraSceneNode.cpp	Sun Jan 04 14:23:44 2015
+++ CCameraSceneNode.cpp	Fri Aug 07 23:09:01 2015
@@ -173,6 +173,12 @@
 	return UpVector;
 }
 
+void CCameraSceneNode::captureState()
+{
+    CapturedTarget = Target;
+    CapturedUpVector = UpVector;
+    ISceneNode::captureState();
+}
 
 f32 CCameraSceneNode::getNearValue() const
 {
@@ -245,9 +251,9 @@
 
 
 //! render
-void CCameraSceneNode::render()
+void CCameraSceneNode::render(f32 interpolate)
 {
-	updateMatrices();
+	updateMatrices(interpolate);
 
 	video::IVideoDriver* driver = SceneManager->getVideoDriver();
 	if ( driver)
@@ -258,15 +264,18 @@
 }
 
 //! update
-void CCameraSceneNode::updateMatrices()
+void CCameraSceneNode::updateMatrices(f32 interpolate)
 {
 	core::vector3df pos = getAbsolutePosition();
-	core::vector3df tgtv = Target - pos;
+	core::vector3df pos2 = (pos-RelativeTranslation)+CapturedTranslation;
+	pos = (pos*interpolate+pos2*(1.f-interpolate));
+	core::vector3df targ = (Target*interpolate+CapturedTarget*(1.f-interpolate));
+	core::vector3df tgtv = targ - pos;
 	tgtv.normalize();
 
 	// if upvector and vector to the target are the same, we have a
 	// problem. so solve this problem:
-	core::vector3df up = UpVector;
+	core::vector3df up = (UpVector*interpolate)+(CapturedUpVector*(1.f-interpolate));
 	up.normalize();
 
 	f32 dp = tgtv.dotProduct(up);
@@ -276,7 +285,7 @@
 		up.X += 0.5f;
 	}
 
-	ViewArea.getTransform(video::ETS_VIEW).buildCameraLookAtMatrixLH(pos, Target, up);
+	ViewArea.getTransform(video::ETS_VIEW).buildCameraLookAtMatrixLH(pos, targ, up);
 	ViewArea.getTransform(video::ETS_VIEW) *= Affector;
 	recalculateViewArea();
 }
--- CCameraSceneNode.h	Sun Jan 04 14:23:44 2015
+++ CCameraSceneNode.h	Fri Aug 07 23:09:15 2015
@@ -79,6 +79,8 @@
 		//! \return Returns the up vector of the camera.
 		virtual const core::vector3df& getUpVector() const _IRR_OVERRIDE_;
 
+		virtual void captureState() _IRR_OVERRIDE_;
+
 		//! Gets distance from the camera to the near plane.
 		//! \return Value of the near plane of the camera.
 		virtual f32 getNearValue() const _IRR_OVERRIDE_;
@@ -111,10 +113,10 @@
 		virtual void OnRegisterSceneNode() _IRR_OVERRIDE_;
 
 		//! Render
-		virtual void render() _IRR_OVERRIDE_;
+		virtual void render(f32 interpolate=1.f) _IRR_OVERRIDE_;
 
 		//! Update
-		virtual void updateMatrices() _IRR_OVERRIDE_;
+		virtual void updateMatrices(f32 interpolate=1.f) _IRR_OVERRIDE_;
 
 		//! Returns the axis aligned bounding box of this node
 		virtual const core::aabbox3d<f32>& getBoundingBox() const _IRR_OVERRIDE_;
@@ -155,6 +157,9 @@
 
 		core::vector3df Target;
 		core::vector3df UpVector;
+
+		core::vector3df CapturedTarget;
+		core::vector3df CapturedUpVector;
 
 		f32 Fovy;	// Field of view, in radians.
 		f32 Aspect;	// Aspect ratio.
--- CCubeSceneNode.cpp	Sun Jan 06 02:40:58 2013
+++ CCubeSceneNode.cpp	Fri Aug 07 20:52:13 2015
@@ -61,10 +61,12 @@
 
 
 //! renders the node.
-void CCubeSceneNode::render()
+void CCubeSceneNode::render(f32 interpolate)
 {
 	video::IVideoDriver* driver = SceneManager->getVideoDriver();
-	driver->setTransform(video::ETS_WORLD, AbsoluteTransformation);
+	core::matrix4 matr = interpolatedAbsoluteTransform(interpolate);
+
+	driver->setTransform(video::ETS_WORLD, matr);
 
 	if (Shadow)
 		Shadow->updateShadowVolumes();
--- CCubeSceneNode.h	Sun Jan 04 14:23:44 2015
+++ CCubeSceneNode.h	Fri Aug 07 20:52:48 2015
@@ -27,7 +27,7 @@
 		virtual void OnRegisterSceneNode() _IRR_OVERRIDE_;
 
 		//! renders the node.
-		virtual void render() _IRR_OVERRIDE_;
+		virtual void render(f32 interpolate=1.f) _IRR_OVERRIDE_;
 
 		//! returns the axis aligned bounding box of this node
 		virtual const core::aabbox3d<f32>& getBoundingBox() const _IRR_OVERRIDE_;
--- CDummyTransformationSceneNode.h	Sun Jan 04 14:23:44 2015
+++ CDummyTransformationSceneNode.h	Fri Aug 07 20:54:11 2015
@@ -31,7 +31,7 @@
 		virtual core::matrix4 getRelativeTransformation() const _IRR_OVERRIDE_;
 
 		//! does nothing.
-		virtual void render() _IRR_OVERRIDE_ {}
+		virtual void render(f32 interpolate=1.f) _IRR_OVERRIDE_ {}
 
 		//! Returns type of the scene node
 		virtual ESCENE_NODE_TYPE getType() const _IRR_OVERRIDE_ { return ESNT_DUMMY_TRANSFORMATION; }
--- CEmptySceneNode.cpp	Sun Jan 06 02:40:58 2013
+++ CEmptySceneNode.cpp	Fri Aug 07 20:54:37 2015
@@ -33,7 +33,7 @@
 
 
 //! render
-void CEmptySceneNode::render()
+void CEmptySceneNode::render(f32 interpolate)
 {
 	// do nothing
 }
--- CEmptySceneNode.h	Sun Jan 04 14:23:44 2015
+++ CEmptySceneNode.h	Fri Aug 07 20:55:01 2015
@@ -26,7 +26,7 @@
 		virtual void OnRegisterSceneNode() _IRR_OVERRIDE_;
 
 		//! does nothing.
-		virtual void render() _IRR_OVERRIDE_;
+		virtual void render(f32 interpolate=1.f) _IRR_OVERRIDE_;
 
 		//! Returns type of the scene node
 		virtual ESCENE_NODE_TYPE getType() const _IRR_OVERRIDE_ { return ESNT_EMPTY; }
--- CInstancedMeshSceneNode.cpp	Sat Jan 10 21:24:40 2015
+++ CInstancedMeshSceneNode.cpp	Fri Aug 07 23:11:57 2015
@@ -156,7 +156,7 @@
 		}
 
 		//! renders the node.
-		void CInstancedMeshSceneNode::render()
+		void CInstancedMeshSceneNode::render(f32 interpolate)
 		{
 			if (!IsVisible || !SceneManager->getActiveCamera())
 				return;
@@ -164,10 +164,11 @@
 			if (!baseMesh || baseMesh->getMeshBuffer(0)->getVertexBuffer(1)->getVertexCount() == 0)
 				return;
 
+            core::matrix4 matr = interpolatedAbsoluteTransform(interpolate);
 			IMeshBuffer* renderBuffer = baseMesh->getMeshBuffer(0);
 
 			video::IVideoDriver* driver = SceneManager->getVideoDriver();
-			driver->setTransform(video::ETS_WORLD, AbsoluteTransformation);
+			driver->setTransform(video::ETS_WORLD, matr);
 			driver->setMaterial(readOnlyMaterial ? material : renderBuffer->getMaterial());
 
 			driver->drawMeshBuffer(renderBuffer);
--- CInstancedMeshSceneNode.h	Sat Jan 10 21:24:40 2015
+++ CInstancedMeshSceneNode.h	Fri Aug 07 23:11:08 2015
@@ -31,7 +31,7 @@
 			virtual void OnRegisterSceneNode();
 
 			//! renders the node.
-			virtual void render();
+			virtual void render(f32 interpolate=1.f);
 
 			virtual void OnAnimate(u32 timeMs);
 
--- CLightSceneNode.cpp	Sun Jan 06 02:40:58 2013
+++ CLightSceneNode.cpp	Fri Aug 07 23:12:14 2015
@@ -44,15 +44,17 @@
 
 
 //! render
-void CLightSceneNode::render()
+void CLightSceneNode::render(f32 interpolate)
 {
+    core::matrix4 mat = interpolatedAbsoluteTransform(interpolate);
+
 	video::IVideoDriver* driver = SceneManager->getVideoDriver();
 	if (!driver)
 		return;
 
 	if ( DebugDataVisible & scene::EDS_BBOX )
 	{
-		driver->setTransform(video::ETS_WORLD, AbsoluteTransformation);
+		driver->setTransform(video::ETS_WORLD, mat);
 		video::SMaterial m;
 		m.Lighting = false;
 		driver->setMaterial(m);
--- CLightSceneNode.h	Sun Jan 04 14:23:44 2015
+++ CLightSceneNode.h	Fri Aug 07 20:57:16 2015
@@ -26,7 +26,7 @@
 	virtual void OnRegisterSceneNode() _IRR_OVERRIDE_;
 
 	//! render
-	virtual void render() _IRR_OVERRIDE_;
+	virtual void render(f32 interpolate=1.f) _IRR_OVERRIDE_;
 
 	//! set node light data from light info
 	virtual void setLightData(const video::SLight& light) _IRR_OVERRIDE_;
--- CMeshSceneNode.cpp	Sun Jan 04 14:23:44 2015
+++ CMeshSceneNode.cpp	Fri Aug 07 21:02:55 2015
@@ -111,10 +111,16 @@
 	}
 }
 
+void CMeshSceneNode::fastRegister()
+{
+    SceneManager->registerNodeForRendering(this, scene::ESNRP_SOLID);
+}
 
 //! renders the node.
-void CMeshSceneNode::render()
+void CMeshSceneNode::render(f32 interpolate)
 {
+	core::matrix4 matr = interpolatedAbsoluteTransform(interpolate);
+
 	video::IVideoDriver* driver = SceneManager->getVideoDriver();
 
 	if (!Mesh || !driver)
@@ -125,7 +131,7 @@
 
 	++PassCount;
 
-	driver->setTransform(video::ETS_WORLD, AbsoluteTransformation);
+	driver->setTransform(video::ETS_WORLD, matr);
 	Box = Mesh->getBoundingBox();
 
 	if (Shadow && PassCount==1)
@@ -175,7 +181,7 @@
 		}
 	}
 
-	driver->setTransform(video::ETS_WORLD, AbsoluteTransformation);
+	driver->setTransform(video::ETS_WORLD, matr);
 
 	// for debug purposes only:
 	if (DebugDataVisible && PassCount==1)
@@ -224,6 +230,39 @@
 			}
 		}
 	}
+}
+
+void CMeshSceneNode::fastRender(const irr::core::vector3df &camWorldPos)
+{
+    video::IVideoDriver* driver = SceneManager->getVideoDriver();
+
+	if (!Mesh || !driver)
+		return;
+
+    //if ((camWorldPos-getPosition()).getLengthSQ()>(getBoundingBox().getExtent()*0.5f+100.f).getLengthSQ()) return;
+
+	if (SceneManager->getSceneNodeRenderPass() == scene::ESNRP_TRANSPARENT) return;
+
+    driver->setTransform(video::ETS_WORLD, AbsoluteTransformation);
+
+    for (u32 i=0; i<Mesh->getMeshBufferCount(); ++i)
+    {
+        scene::IMeshBuffer* mb = Mesh->getMeshBuffer(i);
+        if (mb)
+        {
+            const video::SMaterial& material = ReadOnlyMaterials ? mb->getMaterial() : Materials[i];
+
+            video::IMaterialRenderer* rnd = driver->getMaterialRenderer(material.MaterialType);
+            bool transparent = (rnd && rnd->isTransparent());
+
+            if (transparent == false)
+            {
+                driver->setMaterial(material);
+                driver->drawMeshBuffer(mb);
+            }
+        }
+    }
+
 }
 
 
--- CMeshSceneNode.h	Sun Jan 04 14:23:44 2015
+++ CMeshSceneNode.h	Fri Aug 07 21:23:14 2015
@@ -29,8 +29,12 @@
 		//! frame
 		virtual void OnRegisterSceneNode() _IRR_OVERRIDE_;
 
+        virtual void fastRegister() _IRR_OVERRIDE_;
+
 		//! renders the node.
-		virtual void render() _IRR_OVERRIDE_;
+		virtual void render(f32 interpolate=1.f) _IRR_OVERRIDE_;
+
+        virtual void fastRender(const irr::core::vector3df &camWorldPos) _IRR_OVERRIDE_;
 
 		//! returns the axis aligned bounding box of this node
 		virtual const core::aabbox3d<f32>& getBoundingBox() const _IRR_OVERRIDE_;
--- COctreeSceneNode.cpp	Sun Jan 04 14:23:44 2015
+++ COctreeSceneNode.cpp	Fri Aug 07 21:26:11 2015
@@ -105,7 +105,7 @@
 
 
 //! renders the node.
-void COctreeSceneNode::render()
+void COctreeSceneNode::render(f32 interpolate)
 {
 	IRR_PROFILE(CProfileScope psRender(EPID_OC_RENDER);)
 	video::IVideoDriver* driver = SceneManager->getVideoDriver();
@@ -121,7 +121,8 @@
 		SceneManager->getSceneNodeRenderPass() == scene::ESNRP_TRANSPARENT;
 	++PassCount;
 
-	driver->setTransform(video::ETS_WORLD, AbsoluteTransformation);
+	core::matrix4 mat = interpolatedAbsoluteTransform(interpolate);
+	driver->setTransform(video::ETS_WORLD, mat);
 
 	if (Shadow)
 		Shadow->updateShadowVolumes();
--- COctreeSceneNode.h	Sun Jan 04 14:23:44 2015
+++ COctreeSceneNode.h	Fri Aug 07 21:26:41 2015
@@ -27,7 +27,7 @@
 		virtual void OnRegisterSceneNode() _IRR_OVERRIDE_;
 
 		//! renders the node.
-		virtual void render() _IRR_OVERRIDE_;
+		virtual void render(f32 interpolate=1.f) _IRR_OVERRIDE_;
 
 		//! returns the axis aligned bounding box of this node
 		virtual const core::aabbox3d<f32>& getBoundingBox() const _IRR_OVERRIDE_;
--- CParticleSystemSceneNode.cpp	Mon Jan 12 17:48:40 2015
+++ CParticleSystemSceneNode.cpp	Fri Aug 07 21:34:53 2015
@@ -309,7 +309,7 @@
 
 
 //! render
-void CParticleSystemSceneNode::render()
+void CParticleSystemSceneNode::render(f32 interpolate)
 {
 	video::IVideoDriver* driver = SceneManager->getVideoDriver();
 	ICameraSceneNode* camera = SceneManager->getActiveCamera();
@@ -387,7 +387,7 @@
 	// render all
 	core::matrix4 mat;
 	if (!ParticlesAreGlobal)
-		mat.setTranslation(AbsoluteTransformation.getTranslation());
+		mat.setTranslation(interpolatedAbsoluteTransform(interpolate).getTranslation());
 	driver->setTransform(video::ETS_WORLD, mat);
 
 	driver->setMaterial(MeshBuffer->getMaterial());
@@ -397,7 +397,7 @@
 	// for debug purposes only:
 	if ( DebugDataVisible & scene::EDS_BBOX )
 	{
-		driver->setTransform(video::ETS_WORLD, AbsoluteTransformation);
+		driver->setTransform(video::ETS_WORLD, interpolatedAbsoluteTransform(interpolate));
 		video::SMaterial deb_m;
 		deb_m.Lighting = false;
 		driver->setMaterial(deb_m);
--- CParticleSystemSceneNode.h	Mon Jan 12 17:48:40 2015
+++ CParticleSystemSceneNode.h	Fri Aug 07 21:36:02 2015
@@ -58,7 +58,7 @@
 	virtual void OnRegisterSceneNode() _IRR_OVERRIDE_;
 
 	//! render
-	virtual void render() _IRR_OVERRIDE_;
+	virtual void render(f32 interpolate=1.f) _IRR_OVERRIDE_;
 
 	//! returns the axis aligned bounding box of this node
 	virtual const core::aabbox3d<f32>& getBoundingBox() const _IRR_OVERRIDE_;
--- CQuake3ShaderSceneNode.cpp	Sun Jan 04 14:23:44 2015
+++ CQuake3ShaderSceneNode.cpp	Fri Aug 07 21:39:36 2015
@@ -301,8 +301,9 @@
 /*
 	render in multipass technique
 */
-void CQuake3ShaderSceneNode::render()
+void CQuake3ShaderSceneNode::render(f32 interpolate)
 {
+	core::matrix4 mat = interpolatedAbsoluteTransform(interpolate);
 	video::IVideoDriver* driver = SceneManager->getVideoDriver();
 	E_SCENE_NODE_RENDER_PASS pass = SceneManager->getSceneNodeRenderPass();
 
@@ -342,7 +343,7 @@
 		pushProjection |= 1;
 	}
 
-	driver->setTransform(video::ETS_WORLD, AbsoluteTransformation );
+	driver->setTransform(video::ETS_WORLD, mat );
 	if (Shadow)
 		Shadow->updateShadowVolumes();
 
@@ -478,7 +479,7 @@
 
 			v = (const video::S3DVertex*) ( (u8*) v + vSize );
 		}
-		driver->setTransform(video::ETS_WORLD, AbsoluteTransformation);
+		driver->setTransform(video::ETS_WORLD, mat);
 	}
 
 
--- CQuake3ShaderSceneNode.h	Sun Jan 04 14:23:44 2015
+++ CQuake3ShaderSceneNode.h	Fri Aug 07 21:40:43 2015
@@ -31,7 +31,7 @@
 	virtual ~CQuake3ShaderSceneNode();
 
 	virtual void OnRegisterSceneNode() _IRR_OVERRIDE_;
-	virtual void render() _IRR_OVERRIDE_;
+	virtual void render(f32 interpolate=1.f) _IRR_OVERRIDE_;
 	virtual void OnAnimate(u32 timeMs) _IRR_OVERRIDE_;
 	virtual const core::aabbox3d<f32>& getBoundingBox() const _IRR_OVERRIDE_;
 
--- CSceneManager.cpp	Sat Jan 10 21:24:40 2015
+++ CSceneManager.cpp	Sat Aug 08 16:23:30 2015
@@ -1163,7 +1163,7 @@
 
 
 //! renders the node.
-void CSceneManager::render()
+void CSceneManager::render(f32 interpolate)
 {
 }
 
@@ -1441,10 +1441,14 @@
 	return taken;
 }
 
+void CSceneManager::captureAll()
+{
+    captureState();
+}
 
 //! This method is called just before the rendering process of the whole scene.
 //! draws all scene nodes
-void CSceneManager::drawAll()
+void CSceneManager::drawAll(f32 interpolate)
 {
 	IRR_PROFILE(CProfileScope psAll(EPID_SM_DRAW_ALL);)
 
@@ -1485,7 +1489,7 @@
 	camWorldPos.set(0,0,0);
 	if (ActiveCamera)
 	{
-		ActiveCamera->render();
+		ActiveCamera->render(interpolate);
 		camWorldPos = ActiveCamera->getAbsolutePosition();
 	}
 	IRR_PROFILE(getProfiler().stop(EPID_SM_RENDER_CAMERAS));
@@ -1506,7 +1510,7 @@
 			LightManager->OnRenderPassPreRender(CurrentRenderPass);
 
 		for (i=0; i<CameraList.size(); ++i)
-			CameraList[i]->render();
+			CameraList[i]->render(interpolate);
 
 		CameraList.set_used(0);
 
@@ -1553,7 +1557,7 @@
 			maxLights = core::min_ ( Driver->getMaximalDynamicLightAmount(), maxLights);
 
 		for (i=0; i< maxLights; ++i)
-			LightList[i]->render();
+			LightList[i]->render(interpolate);
 
 		if (LightManager)
 			LightManager->OnRenderPassPostRender(CurrentRenderPass);
@@ -1572,14 +1576,14 @@
 			{
 				ISceneNode* node = SkyBoxList[i];
 				LightManager->OnNodePreRender(node);
-				node->render();
+				node->render(interpolate);
 				LightManager->OnNodePostRender(node);
 			}
 		}
 		else
 		{
 			for (i=0; i<SkyBoxList.size(); ++i)
-				SkyBoxList[i]->render();
+				SkyBoxList[i]->render(interpolate);
 		}
 
 		SkyBoxList.set_used(0);
@@ -1604,14 +1608,17 @@
 			{
 				ISceneNode* node = SolidNodeList[i].Node;
 				LightManager->OnNodePreRender(node);
-				node->render();
+				Driver->currentlyRenderedNode = SolidNodeList[i].Node;
+				node->render(interpolate);
 				LightManager->OnNodePostRender(node);
 			}
 		}
 		else
 		{
-			for (i=0; i<SolidNodeList.size(); ++i)
-				SolidNodeList[i].Node->render();
+			for (i=0; i<SolidNodeList.size(); ++i) {
+				Driver->currentlyRenderedNode = SolidNodeList[i].Node;
+				SolidNodeList[i].Node->render(interpolate);
+			}
 		}
 
 #ifdef _IRR_SCENEMANAGER_DEBUG
@@ -1619,9 +1626,10 @@
 #endif
 		SolidNodeList.set_used(0);
 
-		if (LightManager)
+		if (LightManager) {
 			LightManager->OnRenderPassPostRender(CurrentRenderPass);
 	}
+	}
 
 	// render shadows
 	{
@@ -1636,14 +1644,14 @@
 			{
 				ISceneNode* node = ShadowNodeList[i];
 				LightManager->OnNodePreRender(node);
-				node->render();
+				node->render(interpolate);
 				LightManager->OnNodePostRender(node);
 			}
 		}
 		else
 		{
 			for (i=0; i<ShadowNodeList.size(); ++i)
-				ShadowNodeList[i]->render();
+				ShadowNodeList[i]->render(interpolate);
 		}
 
 		if (!ShadowNodeList.empty())
@@ -1671,14 +1679,14 @@
 			{
 				ISceneNode* node = TransparentNodeList[i].Node;
 				LightManager->OnNodePreRender(node);
-				node->render();
+				node->render(interpolate);
 				LightManager->OnNodePostRender(node);
 			}
 		}
 		else
 		{
 			for (i=0; i<TransparentNodeList.size(); ++i)
-				TransparentNodeList[i].Node->render();
+				TransparentNodeList[i].Node->render(interpolate);
 		}
 
 #ifdef _IRR_SCENEMANAGER_DEBUG
@@ -1706,14 +1714,14 @@
 			{
 				ISceneNode* node = TransparentEffectNodeList[i].Node;
 				LightManager->OnNodePreRender(node);
-				node->render();
+				node->render(interpolate);
 				LightManager->OnNodePostRender(node);
 			}
 		}
 		else
 		{
 			for (i=0; i<TransparentEffectNodeList.size(); ++i)
-				TransparentEffectNodeList[i].Node->render();
+				TransparentEffectNodeList[i].Node->render(interpolate);
 		}
 #ifdef _IRR_SCENEMANAGER_DEBUG
 		Parameters->setAttribute("drawn_transparent_effect", (s32) TransparentEffectNodeList.size());
@@ -1728,6 +1736,154 @@
 	clearDeletionList();
 
 	CurrentRenderPass = ESNRP_NONE;
+}
+
+void CSceneManager::fastDrawAll_init(const core::vector3df &camPos)
+{
+    for (u32 i=video::ETS_COUNT-1; i>=video::ETS_TEXTURE_0; --i)
+		Driver->setTransform ( (video::E_TRANSFORMATION_STATE)i, core::IdentityMatrix );
+    registerCloseNodes();
+    camWorldPos = camPos;
+}
+
+void CSceneManager::fastDrawAll(const core::matrix4 &projectionMatrix,const core::matrix4 &viewMatrix)
+{
+	if (!Driver)
+		return;
+
+	u32 i; // new ISO for scoping problem in some compilers
+
+	// reset all transforms
+	Driver->setMaterial(video::SMaterial());
+	Driver->setTransform ( video::ETS_PROJECTION, projectionMatrix );
+	Driver->setTransform ( video::ETS_VIEW, viewMatrix );
+
+	// TODO: This should not use an attribute here but a real parameter when necessary (too slow!)
+	//Driver->setAllowZWriteOnTransparent(Parameters.getAttributeAsBool( ALLOW_ZWRITE_ON_TRANSPARENT) );
+
+	// do animations and other stuff.
+	//OnAnimate(os::Timer::getTime());
+
+	/*!
+		First Scene Node for prerendering should be the active camera
+		consistent Camera is needed for culling
+	*/
+	/*camWorldPos.set(0,0,0);
+	if (ActiveCamera)
+	{
+		ActiveCamera->render();
+		camWorldPos = ActiveCamera->getAbsolutePosition();
+	}*/
+
+	// let close nodes register themselves
+
+	//registerCloseNodes();
+
+	/*if (LightManager)
+		LightManager->OnPreRender(LightList);*/
+
+	//render camera scenes
+	{
+		CurrentRenderPass = ESNRP_CAMERA;
+		//Driver->getOverrideMaterial().Enabled = ((Driver->getOverrideMaterial().EnablePasses & CurrentRendertime) != 0);
+
+		/*if (LightManager)
+			LightManager->OnRenderPassPreRender(CurrentRendertime);*/
+
+		/*for (i=0; i<CameraList.size(); ++i)
+			CameraList[i]->render();*/
+
+		/*if (LightManager)
+			LightManager->OnRenderPassPostRender(CurrentRendertime);*/
+	}
+
+	//render lights scenes
+	{
+		CurrentRenderPass = ESNRP_LIGHT;
+	}
+
+	// render skyboxes
+	{
+		CurrentRenderPass = ESNRP_SKY_BOX;
+	}
+
+
+	// render default objects
+	{
+		CurrentRenderPass = ESNRP_SOLID;
+		Driver->getOverrideMaterial().Enabled = ((Driver->getOverrideMaterial().EnablePasses & CurrentRenderPass) != 0);
+
+		//SolidNodeList.sort(); // sort by textures
+
+        for (u32 i=0; i<SolidNodeList.size(); ++i) {
+            SolidNodeList[i].Node->fastRender(camWorldPos);
+        }
+	}
+
+	// render shadows
+	{
+		CurrentRenderPass = ESNRP_SHADOW;
+	}
+
+	// render transparent objects.
+	{
+		CurrentRenderPass = ESNRP_TRANSPARENT;
+	}
+
+	// render transparent effect objects.
+	{
+		CurrentRenderPass = ESNRP_TRANSPARENT_EFFECT;
+	}
+
+	/*if (LightManager)
+		LightManager->OnPostRender();*/
+
+	CurrentRenderPass = ESNRP_NONE;
+}
+
+void CSceneManager::fastDrawAll_end()
+{
+    //render camera scenes
+	{
+		CameraList.set_used(0);
+	}
+
+	//render lights scenes
+	{
+		Driver->deleteAllDynamicLights();
+	}
+
+	// render skyboxes
+	{
+		SkyBoxList.set_used(0);
+	}
+
+	// render default objects
+	{
+		SolidNodeList.set_used(0);
+	}
+
+	// render shadows
+	{
+		ShadowNodeList.set_used(0);
+	}
+
+	// render transparent objects.
+	{
+		TransparentNodeList.set_used(0);
+	}
+
+	// render transparent effect objects.
+	{
+		TransparentEffectNodeList.set_used(0);
+	}
+
+	/*if (LightManager)
+		LightManager->OnPostRender();*/
+
+ 	LightList.set_used(0);
+ 	clearDeletionList();
+ 	CurrentRenderPass = ESNRP_NONE;
 }
 
 void CSceneManager::setLightManager(ILightManager* lightManager)
--- CSceneManager.h	Sat Jan 10 21:24:40 2015
+++ CSceneManager.h	Fri Aug 07 22:30:47 2015
@@ -112,7 +112,7 @@
 			const core::vector3df& scale = core::vector3df(1.0f, 1.0f, 1.0f)) _IRR_OVERRIDE_;
 
 		//! renders the node.
-		virtual void render() _IRR_OVERRIDE_;
+		virtual void render(f32 interpolate=1.f) _IRR_OVERRIDE_;
 
 		//! returns the axis aligned bounding box of this node
 		virtual const core::aabbox3d<f32>& getBoundingBox() const _IRR_OVERRIDE_;
@@ -121,7 +121,8 @@
 		virtual u32 registerNodeForRendering(ISceneNode* node, E_SCENE_NODE_RENDER_PASS pass = ESNRP_AUTOMATIC) _IRR_OVERRIDE_;
 
 		//! draws all scene nodes
-		virtual void drawAll() _IRR_OVERRIDE_;
+		virtual void drawAll(f32 interpolate=1.f) _IRR_OVERRIDE_;
+		virtual void captureAll() _IRR_OVERRIDE_;
 
 		//! Adds a camera scene node to the tree and sets it as active camera.
 		//! \param position: Position of the space relative to its parent where the camera will be placed.
@@ -521,6 +522,10 @@
 		//! returns if this is culled
 		virtual bool isCulled(core::aabbox3d<f32> tbox, scene::E_CULLING_TYPE type, const core::matrix4& absoluteTransformation) const;
 
+        virtual void fastDrawAll_init(const core::vector3df &camPos) _IRR_OVERRIDE_;
+        virtual void fastDrawAll(const core::matrix4 &projectionMatrix,const core::matrix4 &viewMatrix) _IRR_OVERRIDE_;
+        virtual void fastDrawAll_end() _IRR_OVERRIDE_;
+
 	protected:
 
 		//! Adds a scene node for rendering using a octree to the scene graph. This a good method for rendering
@@ -658,6 +663,13 @@
 		const core::stringw IRR_XML_FORMAT_NODE_ATTR_TYPE;
 
 		IGeometryCreator* GeometryCreator;
+
+		void registerCloseNodes() {
+            ISceneNodeList::Iterator it = Children.begin();
+            for (; it != Children.end(); ++it) {
+                (*it)->fastRegister();
+            }
+		};
 	};
 
 } // end namespace video
--- CShadowVolumeSceneNode.cpp	Sat May 10 10:23:34 2014
+++ CShadowVolumeSceneNode.cpp	Fri Aug 07 22:33:34 2015
@@ -328,7 +328,7 @@
 }
 
 //! renders the node.
-void CShadowVolumeSceneNode::render()
+void CShadowVolumeSceneNode::render(f32 interpolate)
 {
 	video::IVideoDriver* driver = SceneManager->getVideoDriver();
 
--- CShadowVolumeSceneNode.h	Sun Jan 04 14:23:44 2015
+++ CShadowVolumeSceneNode.h	Fri Aug 07 22:34:18 2015
@@ -37,7 +37,7 @@
 		virtual void OnRegisterSceneNode() _IRR_OVERRIDE_;
 
 		//! renders the node.
-		virtual void render() _IRR_OVERRIDE_;
+		virtual void render(f32 interpolate=1.f) _IRR_OVERRIDE_;
 
 		//! returns the axis aligned bounding box of this node
 		virtual const core::aabbox3d<f32>& getBoundingBox() const _IRR_OVERRIDE_;
--- CSkyBoxSceneNode.cpp	Wed May 14 17:43:08 2014
+++ CSkyBoxSceneNode.cpp	Fri Aug 07 22:36:33 2015
@@ -199,7 +199,7 @@
 
 
 //! renders the node.
-void CSkyBoxSceneNode::render()
+void CSkyBoxSceneNode::render(f32 interpolate)
 {
 	video::IVideoDriver* driver = SceneManager->getVideoDriver();
 	scene::ICameraSceneNode* camera = SceneManager->getActiveCamera();
--- CSkyBoxSceneNode.h	Sun Jan 04 14:23:44 2015
+++ CSkyBoxSceneNode.h	Fri Aug 07 22:37:01 2015
@@ -30,7 +30,7 @@
 		virtual void OnRegisterSceneNode() _IRR_OVERRIDE_;
 
 		//! renders the node.
-		virtual void render() _IRR_OVERRIDE_;
+		virtual void render(f32 interpolate=1.f) _IRR_OVERRIDE_;
 
 		//! returns the axis aligned bounding box of this node
 		virtual const core::aabbox3d<f32>& getBoundingBox() const _IRR_OVERRIDE_;
--- CSkyDomeSceneNode.cpp	Sat May 10 10:23:34 2014
+++ CSkyDomeSceneNode.cpp	Fri Aug 07 22:38:56 2015
@@ -131,7 +131,7 @@
 
 
 //! renders the node.
-void CSkyDomeSceneNode::render()
+void CSkyDomeSceneNode::render(f32 interpolate)
 {
 	video::IVideoDriver* driver = SceneManager->getVideoDriver();
 	scene::ICameraSceneNode* camera = SceneManager->getActiveCamera();
--- CSkyDomeSceneNode.h	Sun Jan 04 14:23:44 2015
+++ CSkyDomeSceneNode.h	Fri Aug 07 22:40:32 2015
@@ -22,7 +22,7 @@
 			ISceneNode* parent, ISceneManager* smgr, s32 id);
 		virtual ~CSkyDomeSceneNode();
 		virtual void OnRegisterSceneNode() _IRR_OVERRIDE_;
-		virtual void render() _IRR_OVERRIDE_;
+		virtual void render(f32 interpolate=1.f) _IRR_OVERRIDE_;
 		virtual const core::aabbox3d<f32>& getBoundingBox() const _IRR_OVERRIDE_;
 		virtual video::SMaterial& getMaterial(u32 i) _IRR_OVERRIDE_;
 		virtual u32 getMaterialCount() const _IRR_OVERRIDE_;
--- CSphereSceneNode.cpp	Sun Jan 06 02:40:58 2013
+++ CSphereSceneNode.cpp	Fri Aug 07 22:43:05 2015
@@ -40,14 +40,15 @@
 
 
 //! renders the node.
-void CSphereSceneNode::render()
+void CSphereSceneNode::render(f32 interpolate)
 {
+    core::matrix4 mat = interpolatedAbsoluteTransform(interpolate);
 	video::IVideoDriver* driver = SceneManager->getVideoDriver();
 
 	if (Mesh && driver)
 	{
 		driver->setMaterial(Mesh->getMeshBuffer(0)->getMaterial());
-		driver->setTransform(video::ETS_WORLD, AbsoluteTransformation);
+		driver->setTransform(video::ETS_WORLD, mat);
 		if (Shadow)
 			Shadow->updateShadowVolumes();
 
--- CSphereSceneNode.h	Sun Jan 04 14:23:44 2015
+++ CSphereSceneNode.h	Fri Aug 07 22:44:18 2015
@@ -28,7 +28,7 @@
 		virtual void OnRegisterSceneNode() _IRR_OVERRIDE_;
 
 		//! renders the node.
-		virtual void render() _IRR_OVERRIDE_;
+		virtual void render(f32 interpolate=1.f) _IRR_OVERRIDE_;
 
 		//! returns the axis aligned bounding box of this node
 		virtual const core::aabbox3d<f32>& getBoundingBox() const _IRR_OVERRIDE_;
--- CTerrainSceneNode.cpp	Sat May 10 10:23:34 2014
+++ CTerrainSceneNode.cpp	Fri Aug 07 22:46:11 2015
@@ -769,8 +769,9 @@
 
 
 	//! Render the scene node
-	void CTerrainSceneNode::render()
+	void CTerrainSceneNode::render(f32 interpolate)
 	{
+        core::matrix4 mat = interpolatedAbsoluteTransform(interpolate);
 		if (!IsVisible || !SceneManager->getActiveCamera())
 			return;
 
@@ -817,7 +818,7 @@
 				driver->drawMeshBufferNormals(RenderBuffer, debugNormalLength, debugNormalColor);
 			}
 
-			driver->setTransform(video::ETS_WORLD, AbsoluteTransformation);
+			driver->setTransform(video::ETS_WORLD, mat);
 
 			static u32 lastTime = 0;
 
--- CTerrainSceneNode.h	Sun Jan 04 14:23:44 2015
+++ CTerrainSceneNode.h	Fri Aug 07 22:46:24 2015
@@ -119,7 +119,7 @@
 		virtual void OnRegisterSceneNode() _IRR_OVERRIDE_;
 
 		//! Render the scene node
-		virtual void render() _IRR_OVERRIDE_;
+		virtual void render(f32 interpolate=1.f) _IRR_OVERRIDE_;
 
 		//! Return the bounding box of the entire terrain.
 		virtual const core::aabbox3d<f32>& getBoundingBox() const _IRR_OVERRIDE_;
--- CTextSceneNode.cpp	Sun Jan 04 14:23:44 2015
+++ CTextSceneNode.cpp	Fri Aug 07 22:50:11 2015
@@ -52,7 +52,7 @@
 }
 
 //! renders the node.
-void CTextSceneNode::render()
+void CTextSceneNode::render(f32 interpolate)
 {
 	if (!Font || !Coll)
 		return;
@@ -335,16 +335,17 @@
 
 
 //! render
-void CBillboardTextSceneNode::render()
+void CBillboardTextSceneNode::render(f32 interpolate)
 {
+    core::matrix4 mat = interpolatedAbsoluteTransform(interpolate);
 	if ( !Mesh )
 		return;
 
 	video::IVideoDriver* driver = SceneManager->getVideoDriver();
 
 	// draw
-	core::matrix4 mat;
-	driver->setTransform(video::ETS_WORLD, mat);
+	core::matrix4 matr;
+	driver->setTransform(video::ETS_WORLD, matr);
 
 	for (u32 i = 0; i < Mesh->getMeshBufferCount(); ++i)
 	{
@@ -354,7 +355,7 @@
 
 	if ( DebugDataVisible & scene::EDS_BBOX )
 	{
-		driver->setTransform(video::ETS_WORLD, AbsoluteTransformation);
+		driver->setTransform(video::ETS_WORLD, mat);
 		video::SMaterial m;
 		m.Lighting = false;
 		driver->setMaterial(m);
--- CTextSceneNode.h	Sun Jan 04 14:23:44 2015
+++ CTextSceneNode.h	Fri Aug 07 22:48:45 2015
@@ -33,7 +33,7 @@
 		virtual void OnRegisterSceneNode() _IRR_OVERRIDE_;
 
 		//! renders the node.
-		virtual void render() _IRR_OVERRIDE_;
+		virtual void render(f32 interpolate=1.f) _IRR_OVERRIDE_;
 
 		//! returns the axis aligned bounding box of this node
 		virtual const core::aabbox3d<f32>& getBoundingBox() const _IRR_OVERRIDE_;
@@ -75,7 +75,7 @@
 		virtual void OnRegisterSceneNode() _IRR_OVERRIDE_;
 
 		//! renders the node.
-		virtual void render() _IRR_OVERRIDE_;
+		virtual void render(f32 interpolate=1.f) _IRR_OVERRIDE_;
 
 		//! returns the axis aligned bounding box of this node
 		virtual const core::aabbox3d<f32>& getBoundingBox() const _IRR_OVERRIDE_;
--- CTriangleSelector.cpp	Sun Jan 04 14:23:44 2015
+++ CTriangleSelector.cpp	Fri Aug 07 22:55:56 2015
@@ -113,6 +113,7 @@
 			core::vector3df* position2 = (core::vector3df*)(offset + buf->getVertexBuffer()->getVertexSize() * buf->getIndexBuffer()->getIndex(index+2));
 
 			core::triangle3df& tri = Triangles[triangleCount++];
+			tri.meshBufferIndex = i;
 			tri.pointA = *position0;
 			tri.pointB = *position1;
 			tri.pointC = *position2;
--- CVolumeLightSceneNode.cpp	Sun Jan 06 02:40:58 2013
+++ CVolumeLightSceneNode.cpp	Fri Aug 07 22:57:08 2015
@@ -50,13 +50,14 @@
 
 
 //! renders the node.
-void CVolumeLightSceneNode::render()
+void CVolumeLightSceneNode::render(f32 interpolate)
 {
+    core::matrix4 mat = interpolatedAbsoluteTransform(interpolate);
 	if (!Mesh)
 		return;
 
 	video::IVideoDriver* driver = SceneManager->getVideoDriver();
-	driver->setTransform(video::ETS_WORLD, AbsoluteTransformation);
+	driver->setTransform(video::ETS_WORLD, mat);
 
 	driver->setMaterial(Mesh->getMeshBuffer(0)->getMaterial());
 	driver->drawMeshBuffer(Mesh->getMeshBuffer(0));
--- CVolumeLightSceneNode.h	Sun Jan 04 14:23:44 2015
+++ CVolumeLightSceneNode.h	Fri Aug 07 22:57:34 2015
@@ -32,7 +32,7 @@
 		virtual void OnRegisterSceneNode() _IRR_OVERRIDE_;
 
 		//! renders the node.
-		virtual void render() _IRR_OVERRIDE_;
+		virtual void render(f32 interpolate=1.f) _IRR_OVERRIDE_;
 
 		//! returns the axis aligned bounding box of this node
 		virtual const core::aabbox3d<f32>& getBoundingBox() const _IRR_OVERRIDE_;
--- Irrlicht-gcc.cbp	Sun Jan 04 14:23:44 2015
+++ Irrlicht-gcc.cbp	Sat Aug 08 00:11:53 2015
@@ -8,8 +8,8 @@
 		<Build>
 			<Target title="Win32 - Debug - dll">
 				<Option platforms="Windows;" />
-				<Option output="..\..\lib\Win32-gcc\Irrlicht" prefix_auto="1" extension_auto="1" />
-				<Option object_output="..\obj\win32-gcc-debug-dll" />
+				<Option output="../../lib/Win32-gcc/Irrlicht" prefix_auto="1" extension_auto="1" />
+				<Option object_output="../obj/win32-gcc-debug-dll" />
 				<Option type="3" />
 				<Option compiler="gcc" />
 				<Option createDefFile="1" />
@@ -27,7 +27,7 @@
 					<Add option="-DIRRLICHT_EXPORTS" />
 					<Add option="-D_CRT_SECURE_NO_DEPRECATE" />
 					<Add option="-D__GNUWIN32__" />
-					<Add directory="..\..\include" />
+					<Add directory="../../include" />
 					<Add directory="zlib" />
 				</Compiler>
 				<Linker>
@@ -51,8 +51,8 @@
 			</Target>
 			<Target title="Win32 - Release - accurate math - dll">
 				<Option platforms="Windows;" />
-				<Option output="..\..\lib\Win32-gcc\Irrlicht" prefix_auto="1" extension_auto="1" />
-				<Option object_output="..\obj\win32-gcc-release-dll" />
+				<Option output="../../lib/Win32-gcc/Irrlicht" prefix_auto="1" extension_auto="1" />
+				<Option object_output="../obj/win32-gcc-release-dll" />
 				<Option type="3" />
 				<Option compiler="gcc" />
 				<Option createDefFile="1" />
@@ -68,7 +68,7 @@
 					<Add option="-DIRRLICHT_EXPORTS" />
 					<Add option="-D_CRT_SECURE_NO_DEPRECATE" />
 					<Add option="-D__GNUWIN32__" />
-					<Add directory="..\..\include" />
+					<Add directory="../../include" />
 					<Add directory="zlib" />
 				</Compiler>
 				<Linker>
@@ -93,8 +93,8 @@
 			</Target>
 			<Target title="Win32 - Release - fast math - dll">
 				<Option platforms="Windows;" />
-				<Option output="..\..\lib\Win32-gcc\Irrlicht" prefix_auto="1" extension_auto="1" />
-				<Option object_output="..\obj\win32-gcc-release-fast-dll" />
+				<Option output="../../lib/Win32-gcc/Irrlicht" prefix_auto="1" extension_auto="1" />
+				<Option object_output="../obj/win32-gcc-release-fast-dll" />
 				<Option type="3" />
 				<Option compiler="gcc" />
 				<Option createDefFile="1" />
@@ -111,7 +111,7 @@
 					<Add option="-DIRRLICHT_EXPORTS" />
 					<Add option="-D_CRT_SECURE_NO_DEPRECATE" />
 					<Add option="-D__GNUWIN32__" />
-					<Add directory="..\..\include" />
+					<Add directory="../../include" />
 					<Add directory="zlib" />
 				</Compiler>
 				<Linker>
@@ -135,9 +135,9 @@
 			</Target>
 			<Target title="Win32 - Debug - static">
 				<Option platforms="Windows;" />
-				<Option output="..\..\lib\Win32-gcc\Irrlicht" prefix_auto="1" extension_auto="1" />
+				<Option output="../../lib/Win32-gcc/Irrlicht" prefix_auto="1" extension_auto="1" />
 				<Option working_dir="" />
-				<Option object_output="..\obj\win32-gcc-debug-static" />
+				<Option object_output="../obj/win32-gcc-debug-static" />
 				<Option type="2" />
 				<Option compiler="gcc" />
 				<Option createDefFile="1" />
@@ -153,7 +153,7 @@
 					<Add option="-D_IRR_STATIC_LIB_" />
 					<Add option="-D_CRT_SECURE_NO_DEPRECATE" />
 					<Add option="-D__GNUWIN32__" />
-					<Add directory="..\..\include" />
+					<Add directory="../../include" />
 					<Add directory="zlib" />
 				</Compiler>
 				<Linker>
@@ -173,9 +173,9 @@
 			</Target>
 			<Target title="Win32 - Release - accurate math - static">
 				<Option platforms="Windows;" />
-				<Option output="..\..\lib\Win32-gcc\Irrlicht" prefix_auto="1" extension_auto="1" />
+				<Option output="../../lib/Win32-gcc/Irrlicht" prefix_auto="1" extension_auto="1" />
 				<Option working_dir="" />
-				<Option object_output="..\obj\win32-gcc-release-static" />
+				<Option object_output="../obj/win32-gcc-release-static" />
 				<Option type="2" />
 				<Option compiler="gcc" />
 				<Option createDefFile="1" />
@@ -191,7 +191,7 @@
 					<Add option="-D_IRR_STATIC_LIB_" />
 					<Add option="-D_CRT_SECURE_NO_DEPRECATE" />
 					<Add option="-D__GNUWIN32__" />
-					<Add directory="..\..\include" />
+					<Add directory="../../include" />
 					<Add directory="zlib" />
 				</Compiler>
 				<Linker>
@@ -212,9 +212,9 @@
 			</Target>
 			<Target title="Win32 - Release - fast math - static">
 				<Option platforms="Windows;" />
-				<Option output="..\..\lib\Win32-gcc\Irrlicht" prefix_auto="1" extension_auto="1" />
+				<Option output="../../lib/Win32-gcc/Irrlicht" prefix_auto="1" extension_auto="1" />
 				<Option working_dir="" />
-				<Option object_output="..\obj\win32-gcc-release-fast-static" />
+				<Option object_output="../obj/win32-gcc-release-fast-static" />
 				<Option type="2" />
 				<Option compiler="gcc" />
 				<Option createDefFile="1" />
@@ -231,7 +231,7 @@
 					<Add option="-D_IRR_STATIC_LIB_" />
 					<Add option="-D_CRT_SECURE_NO_DEPRECATE" />
 					<Add option="-D__GNUWIN32__" />
-					<Add directory="..\..\include" />
+					<Add directory="../../include" />
 					<Add directory="zlib" />
 				</Compiler>
 				<Linker>
@@ -252,8 +252,8 @@
 			</Target>
 			<Target title="Linux - Debug - shared">
 				<Option platforms="Unix;" />
-				<Option output="..\..\lib\Linux\libIrrlicht" prefix_auto="0" extension_auto="1" />
-				<Option object_output="..\obj\linux-gcc-debug-shared" />
+				<Option output="../../lib/Linux/libIrrlicht" prefix_auto="0" extension_auto="1" />
+				<Option object_output="../obj/linux-gcc-debug-shared" />
 				<Option type="3" />
 				<Option compiler="gcc" />
 				<Option createDefFile="1" />
@@ -265,7 +265,7 @@
 					<Add option="-O0" />
 					<Add option="-fPIC" />
 					<Add option="-D_DEBUG" />
-					<Add directory="..\..\include" />
+					<Add directory="../../include" />
 					<Add directory="zlib" />
 					<Add directory="libpng" />
 					<Add directory="jpeglib" />
@@ -273,14 +273,14 @@
 				<Linker>
 					<Add library="GL" />
 					<Add library="Xxf86vm" />
-					<Add directory="\usr\X11R6\lib" />
-					<Add directory="\usr\local\lib" />
+					<Add directory="/usr/X11R6/lib" />
+					<Add directory="/usr/local/lib" />
 				</Linker>
 			</Target>
 			<Target title="Linux - Release - accurate math - shared">
 				<Option platforms="Unix;" />
-				<Option output="..\..\lib\Linux\libIrrlicht" prefix_auto="0" extension_auto="1" />
-				<Option object_output="..\obj\linux-gcc-release-shared" />
+				<Option output="../../lib/Linux/libIrrlicht" prefix_auto="0" extension_auto="1" />
+				<Option object_output="../obj/linux-gcc-release-shared" />
 				<Option type="3" />
 				<Option compiler="gcc" />
 				<Option createDefFile="1" />
@@ -289,7 +289,7 @@
 					<Add option="-O3" />
 					<Add option="-Wextra" />
 					<Add option="-fPIC" />
-					<Add directory="..\..\include" />
+					<Add directory="../../include" />
 					<Add directory="zlib" />
 					<Add directory="libpng" />
 					<Add directory="jpeglib" />
@@ -297,14 +297,14 @@
 				<Linker>
 					<Add library="GL" />
 					<Add library="Xxf86vm" />
-					<Add directory="\usr\X11R6\lib" />
-					<Add directory="\usr\local\lib" />
+					<Add directory="/usr/X11R6/lib" />
+					<Add directory="/usr/local/lib" />
 				</Linker>
 			</Target>
 			<Target title="Linux - Release - fast math - shared">
 				<Option platforms="Unix;" />
-				<Option output="..\..\lib\Linux\libIrrlicht" prefix_auto="0" extension_auto="1" />
-				<Option object_output="..\obj\linux-gcc-release-fast-shared" />
+				<Option output="../../lib/Linux/libIrrlicht" prefix_auto="0" extension_auto="1" />
+				<Option object_output="../obj/linux-gcc-release-fast-shared" />
 				<Option type="3" />
 				<Option compiler="gcc" />
 				<Option createDefFile="1" />
@@ -314,7 +314,7 @@
 					<Add option="-Wextra" />
 					<Add option="-fPIC" />
 					<Add option="-ffast-math" />
-					<Add directory="..\..\include" />
+					<Add directory="../../include" />
 					<Add directory="zlib" />
 					<Add directory="libpng" />
 					<Add directory="jpeglib" />
@@ -322,15 +322,15 @@
 				<Linker>
 					<Add library="GL" />
 					<Add library="Xxf86vm" />
-					<Add directory="\usr\X11R6\lib" />
-					<Add directory="\usr\local\lib" />
+					<Add directory="/usr/X11R6/lib" />
+					<Add directory="/usr/local/lib" />
 				</Linker>
 			</Target>
 			<Target title="Linux - Debug - static">
 				<Option platforms="Unix;" />
-				<Option output="..\..\lib\Linux\libIrrlicht" prefix_auto="0" extension_auto="1" />
+				<Option output="../../lib/Linux/libIrrlicht" prefix_auto="0" extension_auto="1" />
 				<Option working_dir="" />
-				<Option object_output="..\obj\linux-gcc-debug-static" />
+				<Option object_output="../obj/linux-gcc-debug-static" />
 				<Option type="2" />
 				<Option compiler="gcc" />
 				<Option createDefFile="1" />
@@ -341,22 +341,22 @@
 					<Add option="-O0" />
 					<Add option="-D_IRR_STATIC_LIB_" />
 					<Add option="-D_DEBUG" />
-					<Add directory="..\..\include" />
+					<Add directory="../../include" />
 					<Add directory="zlib" />
 					<Add directory="libpng" />
 				</Compiler>
 				<Linker>
 					<Add library="GL" />
 					<Add library="Xxf86vm" />
-					<Add directory="\usr\X11R6\lib" />
-					<Add directory="\usr\local\lib" />
+					<Add directory="/usr/X11R6/lib" />
+					<Add directory="/usr/local/lib" />
 				</Linker>
 			</Target>
 			<Target title="Linux - Release - accurate math - static">
 				<Option platforms="Unix;" />
-				<Option output="..\..\lib\Linux\libIrrlicht" prefix_auto="0" extension_auto="1" />
+				<Option output="../../lib/Linux/libIrrlicht" prefix_auto="0" extension_auto="1" />
 				<Option working_dir="" />
-				<Option object_output="..\obj\linux-gcc-release-static" />
+				<Option object_output="../obj/linux-gcc-release-static" />
 				<Option type="2" />
 				<Option compiler="gcc" />
 				<Option createDefFile="1" />
@@ -365,22 +365,22 @@
 					<Add option="-Wextra" />
 					<Add option="-fno-exceptions" />
 					<Add option="-D_IRR_STATIC_LIB_" />
-					<Add directory="..\..\include" />
+					<Add directory="../../include" />
 					<Add directory="zlib" />
 					<Add directory="libpng" />
 				</Compiler>
 				<Linker>
 					<Add library="GL" />
 					<Add library="Xxf86vm" />
-					<Add directory="\usr\X11R6\lib" />
-					<Add directory="\usr\local\lib" />
+					<Add directory="/usr/X11R6/lib" />
+					<Add directory="/usr/local/lib" />
 				</Linker>
 			</Target>
 			<Target title="Linux - Release - fast math - static">
 				<Option platforms="Unix;" />
-				<Option output="..\..\lib\Linux\libIrrlicht" prefix_auto="0" extension_auto="1" />
+				<Option output="../../lib/Linux/libIrrlicht" prefix_auto="0" extension_auto="1" />
 				<Option working_dir="" />
-				<Option object_output="..\obj\linux-gcc-release-fast-static" />
+				<Option object_output="../obj/linux-gcc-release-fast-static" />
 				<Option type="2" />
 				<Option compiler="gcc" />
 				<Option createDefFile="1" />
@@ -389,15 +389,15 @@
 					<Add option="-Wextra" />
 					<Add option="-ffast-math" />
 					<Add option="-D_IRR_STATIC_LIB_" />
-					<Add directory="..\..\include" />
+					<Add directory="../../include" />
 					<Add directory="zlib" />
 					<Add directory="libpng" />
 				</Compiler>
 				<Linker>
 					<Add library="GL" />
 					<Add library="Xxf86vm" />
-					<Add directory="\usr\X11R6\lib" />
-					<Add directory="\usr\local\lib" />
+					<Add directory="/usr/X11R6/lib" />
+					<Add directory="/usr/local/lib" />
 				</Linker>
 			</Target>
 		</Build>
@@ -410,193 +410,193 @@
 			<Add option="-fno-rtti" />
 			<Add option="-fstrict-aliasing" />
 		</Compiler>
-		<Unit filename="..\..\changes.txt" />
-		<Unit filename="..\..\include\CDynamicMeshBuffer.h" />
-		<Unit filename="..\..\include\CIndexBuffer.h" />
-		<Unit filename="..\..\include\CMeshBuffer.h" />
-		<Unit filename="..\..\include\CVertexBuffer.h" />
-		<Unit filename="..\..\include\EAttributes.h" />
-		<Unit filename="..\..\include\ECullingTypes.h" />
-		<Unit filename="..\..\include\EDebugSceneTypes.h" />
-		<Unit filename="..\..\include\EDeviceTypes.h" />
-		<Unit filename="..\..\include\EDriverFeatures.h" />
-		<Unit filename="..\..\include\EDriverTypes.h" />
-		<Unit filename="..\..\include\EFocusFlags.h" />
-		<Unit filename="..\..\include\EGUIAlignment.h" />
-		<Unit filename="..\..\include\EGUIElementTypes.h" />
-		<Unit filename="..\..\include\EHardwareBufferFlags.h" />
-		<Unit filename="..\..\include\EMaterialFlags.h" />
-		<Unit filename="..\..\include\EMaterialTypes.h" />
-		<Unit filename="..\..\include\EMeshWriterEnums.h" />
-		<Unit filename="..\..\include\EMessageBoxFlags.h" />
-		<Unit filename="..\..\include\EPrimitiveTypes.h" />
-		<Unit filename="..\..\include\ESceneNodeAnimatorTypes.h" />
-		<Unit filename="..\..\include\ESceneNodeTypes.h" />
-		<Unit filename="..\..\include\EShaderTypes.h" />
-		<Unit filename="..\..\include\ETerrainElements.h" />
-		<Unit filename="..\..\include\IAnimatedMesh.h" />
-		<Unit filename="..\..\include\IAnimatedMeshMD2.h" />
-		<Unit filename="..\..\include\IAnimatedMeshMD3.h" />
-		<Unit filename="..\..\include\IAnimatedMeshSceneNode.h" />
-		<Unit filename="..\..\include\IAttributeExchangingObject.h" />
-		<Unit filename="..\..\include\IAttributes.h" />
-		<Unit filename="..\..\include\IBillboardSceneNode.h" />
-		<Unit filename="..\..\include\IBillboardTextSceneNode.h" />
-		<Unit filename="..\..\include\IBoneSceneNode.h" />
-		<Unit filename="..\..\include\ICameraSceneNode.h" />
-		<Unit filename="..\..\include\IColladaMeshWriter.h" />
-		<Unit filename="..\..\include\ICursorControl.h" />
-		<Unit filename="..\..\include\IDummyTransformationSceneNode.h" />
-		<Unit filename="..\..\include\IDynamicMeshBuffer.h" />
-		<Unit filename="..\..\include\IEventReceiver.h" />
-		<Unit filename="..\..\include\IFileArchive.h" />
-		<Unit filename="..\..\include\IFileList.h" />
-		<Unit filename="..\..\include\IFileSystem.h" />
-		<Unit filename="..\..\include\IGPUProgrammingServices.h" />
-		<Unit filename="..\..\include\IGUIButton.h" />
-		<Unit filename="..\..\include\IGUICheckBox.h" />
-		<Unit filename="..\..\include\IGUIColorSelectDialog.h" />
-		<Unit filename="..\..\include\IGUIComboBox.h" />
-		<Unit filename="..\..\include\IGUIContextMenu.h" />
-		<Unit filename="..\..\include\IGUIEditBox.h" />
-		<Unit filename="..\..\include\IGUIElement.h" />
-		<Unit filename="..\..\include\IGUIElementFactory.h" />
-		<Unit filename="..\..\include\IGUIEnvironment.h" />
-		<Unit filename="..\..\include\IGUIFileOpenDialog.h" />
-		<Unit filename="..\..\include\IGUIFont.h" />
-		<Unit filename="..\..\include\IGUIFontBitmap.h" />
-		<Unit filename="..\..\include\IGUIImage.h" />
-		<Unit filename="..\..\include\IGUIImageList.h" />
-		<Unit filename="..\..\include\IGUIInOutFader.h" />
-		<Unit filename="..\..\include\IGUIListBox.h" />
-		<Unit filename="..\..\include\IGUIMeshViewer.h" />
-		<Unit filename="..\..\include\IGUIProfiler.h" />
-		<Unit filename="..\..\include\IGUIScrollBar.h" />
-		<Unit filename="..\..\include\IGUISkin.h" />
-		<Unit filename="..\..\include\IGUISpinBox.h" />
-		<Unit filename="..\..\include\IGUISpriteBank.h" />
-		<Unit filename="..\..\include\IGUIStaticText.h" />
-		<Unit filename="..\..\include\IGUITabControl.h" />
-		<Unit filename="..\..\include\IGUITable.h" />
-		<Unit filename="..\..\include\IGUIToolbar.h" />
-		<Unit filename="..\..\include\IGUITreeView.h" />
-		<Unit filename="..\..\include\IGUIWindow.h" />
-		<Unit filename="..\..\include\IGeometryCreator.h" />
-		<Unit filename="..\..\include\IImage.h" />
-		<Unit filename="..\..\include\IImageLoader.h" />
-		<Unit filename="..\..\include\IImageWriter.h" />
-		<Unit filename="..\..\include\IIndexBuffer.h" />
-		<Unit filename="..\..\include\ILightManager.h" />
-		<Unit filename="..\..\include\ILightSceneNode.h" />
-		<Unit filename="..\..\include\ILogger.h" />
-		<Unit filename="..\..\include\IMaterialRenderer.h" />
-		<Unit filename="..\..\include\IMaterialRendererServices.h" />
-		<Unit filename="..\..\include\IMesh.h" />
-		<Unit filename="..\..\include\IMeshBuffer.h" />
-		<Unit filename="..\..\include\IMeshCache.h" />
-		<Unit filename="..\..\include\IMeshLoader.h" />
-		<Unit filename="..\..\include\IMeshManipulator.h" />
-		<Unit filename="..\..\include\IMeshSceneNode.h" />
-		<Unit filename="..\..\include\IMeshTextureLoader.h" />
-		<Unit filename="..\..\include\IMeshWriter.h" />
-		<Unit filename="..\..\include\IMetaTriangleSelector.h" />
-		<Unit filename="..\..\include\IOSOperator.h" />
-		<Unit filename="..\..\include\IParticleAffector.h" />
-		<Unit filename="..\..\include\IParticleAnimatedMeshSceneNodeEmitter.h" />
-		<Unit filename="..\..\include\IParticleAttractionAffector.h" />
-		<Unit filename="..\..\include\IParticleBoxEmitter.h" />
-		<Unit filename="..\..\include\IParticleCylinderEmitter.h" />
-		<Unit filename="..\..\include\IParticleEmitter.h" />
-		<Unit filename="..\..\include\IParticleFadeOutAffector.h" />
-		<Unit filename="..\..\include\IParticleGravityAffector.h" />
-		<Unit filename="..\..\include\IParticleMeshEmitter.h" />
-		<Unit filename="..\..\include\IParticleRingEmitter.h" />
-		<Unit filename="..\..\include\IParticleRotationAffector.h" />
-		<Unit filename="..\..\include\IParticleSphereEmitter.h" />
-		<Unit filename="..\..\include\IParticleSystemSceneNode.h" />
-		<Unit filename="..\..\include\IProfiler.h" />
-		<Unit filename="..\..\include\IQ3LevelMesh.h" />
-		<Unit filename="..\..\include\IQ3Shader.h" />
-		<Unit filename="..\..\include\IReadFile.h" />
-		<Unit filename="..\..\include\IReferenceCounted.h" />
-		<Unit filename="..\..\include\ISceneCollisionManager.h" />
-		<Unit filename="..\..\include\ISceneLoader.h" />
-		<Unit filename="..\..\include\ISceneManager.h" />
-		<Unit filename="..\..\include\ISceneNode.h" />
-		<Unit filename="..\..\include\ISceneNodeAnimator.h" />
-		<Unit filename="..\..\include\ISceneNodeAnimatorCameraFPS.h" />
-		<Unit filename="..\..\include\ISceneNodeAnimatorCameraMaya.h" />
-		<Unit filename="..\..\include\ISceneNodeAnimatorCollisionResponse.h" />
-		<Unit filename="..\..\include\ISceneNodeAnimatorFactory.h" />
-		<Unit filename="..\..\include\ISceneNodeFactory.h" />
-		<Unit filename="..\..\include\ISceneUserDataSerializer.h" />
-		<Unit filename="..\..\include\IShaderConstantSetCallBack.h" />
-		<Unit filename="..\..\include\IShadowVolumeSceneNode.h" />
-		<Unit filename="..\..\include\ISkinnedMesh.h" />
-		<Unit filename="..\..\include\ITerrainSceneNode.h" />
-		<Unit filename="..\..\include\ITextSceneNode.h" />
-		<Unit filename="..\..\include\ITexture.h" />
-		<Unit filename="..\..\include\ITimer.h" />
-		<Unit filename="..\..\include\ITriangleSelector.h" />
-		<Unit filename="..\..\include\IVertexBuffer.h" />
-		<Unit filename="..\..\include\IVideoDriver.h" />
-		<Unit filename="..\..\include\IVideoModeList.h" />
-		<Unit filename="..\..\include\IVolumeLightSceneNode.h" />
-		<Unit filename="..\..\include\IWriteFile.h" />
-		<Unit filename="..\..\include\IXMLReader.h" />
-		<Unit filename="..\..\include\IXMLWriter.h" />
-		<Unit filename="..\..\include\IrrCompileConfig.h" />
-		<Unit filename="..\..\include\IrrlichtDevice.h" />
-		<Unit filename="..\..\include\Keycodes.h" />
-		<Unit filename="..\..\include\S3DVertex.h" />
-		<Unit filename="..\..\include\SAnimatedMesh.h" />
-		<Unit filename="..\..\include\SColor.h" />
-		<Unit filename="..\..\include\SExposedVideoData.h" />
-		<Unit filename="..\..\include\SIrrCreationParameters.h" />
-		<Unit filename="..\..\include\SKeyMap.h" />
-		<Unit filename="..\..\include\SLight.h" />
-		<Unit filename="..\..\include\SMaterial.h" />
-		<Unit filename="..\..\include\SMaterialLayer.h" />
-		<Unit filename="..\..\include\SMesh.h" />
-		<Unit filename="..\..\include\SMeshBuffer.h" />
-		<Unit filename="..\..\include\SMeshBufferLightMap.h" />
-		<Unit filename="..\..\include\SMeshBufferTangents.h" />
-		<Unit filename="..\..\include\SParticle.h" />
-		<Unit filename="..\..\include\SSharedMeshBuffer.h" />
-		<Unit filename="..\..\include\SSkinMeshBuffer.h" />
-		<Unit filename="..\..\include\SVertexIndex.h" />
-		<Unit filename="..\..\include\SVertexManipulator.h" />
-		<Unit filename="..\..\include\SViewFrustum.h" />
-		<Unit filename="..\..\include\SceneParameters.h" />
-		<Unit filename="..\..\include\aabbox3d.h" />
-		<Unit filename="..\..\include\coreutil.h" />
-		<Unit filename="..\..\include\dimension2d.h" />
-		<Unit filename="..\..\include\fast_atof.h" />
-		<Unit filename="..\..\include\heapsort.h" />
-		<Unit filename="..\..\include\irrAllocator.h" />
-		<Unit filename="..\..\include\irrArray.h" />
-		<Unit filename="..\..\include\irrList.h" />
-		<Unit filename="..\..\include\irrMap.h" />
-		<Unit filename="..\..\include\irrMath.h" />
-		<Unit filename="..\..\include\irrString.h" />
-		<Unit filename="..\..\include\irrTypes.h" />
-		<Unit filename="..\..\include\irrXML.h" />
-		<Unit filename="..\..\include\irrlicht.h" />
-		<Unit filename="..\..\include\irrpack.h" />
-		<Unit filename="..\..\include\irrunpack.h" />
-		<Unit filename="..\..\include\leakHunter.h" />
-		<Unit filename="..\..\include\line2d.h" />
-		<Unit filename="..\..\include\line3d.h" />
-		<Unit filename="..\..\include\matrix4.h" />
-		<Unit filename="..\..\include\path.h" />
-		<Unit filename="..\..\include\plane3d.h" />
-		<Unit filename="..\..\include\position2d.h" />
-		<Unit filename="..\..\include\quaternion.h" />
-		<Unit filename="..\..\include\rect.h" />
-		<Unit filename="..\..\include\triangle3d.h" />
-		<Unit filename="..\..\include\vector2d.h" />
-		<Unit filename="..\..\include\vector3d.h" />
-		<Unit filename="..\..\readme.txt" />
+		<Unit filename="../../changes.txt" />
+		<Unit filename="../../include/CDynamicMeshBuffer.h" />
+		<Unit filename="../../include/CIndexBuffer.h" />
+		<Unit filename="../../include/CMeshBuffer.h" />
+		<Unit filename="../../include/CVertexBuffer.h" />
+		<Unit filename="../../include/EAttributes.h" />
+		<Unit filename="../../include/ECullingTypes.h" />
+		<Unit filename="../../include/EDebugSceneTypes.h" />
+		<Unit filename="../../include/EDeviceTypes.h" />
+		<Unit filename="../../include/EDriverFeatures.h" />
+		<Unit filename="../../include/EDriverTypes.h" />
+		<Unit filename="../../include/EFocusFlags.h" />
+		<Unit filename="../../include/EGUIAlignment.h" />
+		<Unit filename="../../include/EGUIElementTypes.h" />
+		<Unit filename="../../include/EHardwareBufferFlags.h" />
+		<Unit filename="../../include/EMaterialFlags.h" />
+		<Unit filename="../../include/EMaterialTypes.h" />
+		<Unit filename="../../include/EMeshWriterEnums.h" />
+		<Unit filename="../../include/EMessageBoxFlags.h" />
+		<Unit filename="../../include/EPrimitiveTypes.h" />
+		<Unit filename="../../include/ESceneNodeAnimatorTypes.h" />
+		<Unit filename="../../include/ESceneNodeTypes.h" />
+		<Unit filename="../../include/EShaderTypes.h" />
+		<Unit filename="../../include/ETerrainElements.h" />
+		<Unit filename="../../include/IAnimatedMesh.h" />
+		<Unit filename="../../include/IAnimatedMeshMD2.h" />
+		<Unit filename="../../include/IAnimatedMeshMD3.h" />
+		<Unit filename="../../include/IAnimatedMeshSceneNode.h" />
+		<Unit filename="../../include/IAttributeExchangingObject.h" />
+		<Unit filename="../../include/IAttributes.h" />
+		<Unit filename="../../include/IBillboardSceneNode.h" />
+		<Unit filename="../../include/IBillboardTextSceneNode.h" />
+		<Unit filename="../../include/IBoneSceneNode.h" />
+		<Unit filename="../../include/ICameraSceneNode.h" />
+		<Unit filename="../../include/IColladaMeshWriter.h" />
+		<Unit filename="../../include/ICursorControl.h" />
+		<Unit filename="../../include/IDummyTransformationSceneNode.h" />
+		<Unit filename="../../include/IDynamicMeshBuffer.h" />
+		<Unit filename="../../include/IEventReceiver.h" />
+		<Unit filename="../../include/IFileArchive.h" />
+		<Unit filename="../../include/IFileList.h" />
+		<Unit filename="../../include/IFileSystem.h" />
+		<Unit filename="../../include/IGPUProgrammingServices.h" />
+		<Unit filename="../../include/IGUIButton.h" />
+		<Unit filename="../../include/IGUICheckBox.h" />
+		<Unit filename="../../include/IGUIColorSelectDialog.h" />
+		<Unit filename="../../include/IGUIComboBox.h" />
+		<Unit filename="../../include/IGUIContextMenu.h" />
+		<Unit filename="../../include/IGUIEditBox.h" />
+		<Unit filename="../../include/IGUIElement.h" />
+		<Unit filename="../../include/IGUIElementFactory.h" />
+		<Unit filename="../../include/IGUIEnvironment.h" />
+		<Unit filename="../../include/IGUIFileOpenDialog.h" />
+		<Unit filename="../../include/IGUIFont.h" />
+		<Unit filename="../../include/IGUIFontBitmap.h" />
+		<Unit filename="../../include/IGUIImage.h" />
+		<Unit filename="../../include/IGUIImageList.h" />
+		<Unit filename="../../include/IGUIInOutFader.h" />
+		<Unit filename="../../include/IGUIListBox.h" />
+		<Unit filename="../../include/IGUIMeshViewer.h" />
+		<Unit filename="../../include/IGUIProfiler.h" />
+		<Unit filename="../../include/IGUIScrollBar.h" />
+		<Unit filename="../../include/IGUISkin.h" />
+		<Unit filename="../../include/IGUISpinBox.h" />
+		<Unit filename="../../include/IGUISpriteBank.h" />
+		<Unit filename="../../include/IGUIStaticText.h" />
+		<Unit filename="../../include/IGUITabControl.h" />
+		<Unit filename="../../include/IGUITable.h" />
+		<Unit filename="../../include/IGUIToolbar.h" />
+		<Unit filename="../../include/IGUITreeView.h" />
+		<Unit filename="../../include/IGUIWindow.h" />
+		<Unit filename="../../include/IGeometryCreator.h" />
+		<Unit filename="../../include/IImage.h" />
+		<Unit filename="../../include/IImageLoader.h" />
+		<Unit filename="../../include/IImageWriter.h" />
+		<Unit filename="../../include/IIndexBuffer.h" />
+		<Unit filename="../../include/ILightManager.h" />
+		<Unit filename="../../include/ILightSceneNode.h" />
+		<Unit filename="../../include/ILogger.h" />
+		<Unit filename="../../include/IMaterialRenderer.h" />
+		<Unit filename="../../include/IMaterialRendererServices.h" />
+		<Unit filename="../../include/IMesh.h" />
+		<Unit filename="../../include/IMeshBuffer.h" />
+		<Unit filename="../../include/IMeshCache.h" />
+		<Unit filename="../../include/IMeshLoader.h" />
+		<Unit filename="../../include/IMeshManipulator.h" />
+		<Unit filename="../../include/IMeshSceneNode.h" />
+		<Unit filename="../../include/IMeshTextureLoader.h" />
+		<Unit filename="../../include/IMeshWriter.h" />
+		<Unit filename="../../include/IMetaTriangleSelector.h" />
+		<Unit filename="../../include/IOSOperator.h" />
+		<Unit filename="../../include/IParticleAffector.h" />
+		<Unit filename="../../include/IParticleAnimatedMeshSceneNodeEmitter.h" />
+		<Unit filename="../../include/IParticleAttractionAffector.h" />
+		<Unit filename="../../include/IParticleBoxEmitter.h" />
+		<Unit filename="../../include/IParticleCylinderEmitter.h" />
+		<Unit filename="../../include/IParticleEmitter.h" />
+		<Unit filename="../../include/IParticleFadeOutAffector.h" />
+		<Unit filename="../../include/IParticleGravityAffector.h" />
+		<Unit filename="../../include/IParticleMeshEmitter.h" />
+		<Unit filename="../../include/IParticleRingEmitter.h" />
+		<Unit filename="../../include/IParticleRotationAffector.h" />
+		<Unit filename="../../include/IParticleSphereEmitter.h" />
+		<Unit filename="../../include/IParticleSystemSceneNode.h" />
+		<Unit filename="../../include/IProfiler.h" />
+		<Unit filename="../../include/IQ3LevelMesh.h" />
+		<Unit filename="../../include/IQ3Shader.h" />
+		<Unit filename="../../include/IReadFile.h" />
+		<Unit filename="../../include/IReferenceCounted.h" />
+		<Unit filename="../../include/ISceneCollisionManager.h" />
+		<Unit filename="../../include/ISceneLoader.h" />
+		<Unit filename="../../include/ISceneManager.h" />
+		<Unit filename="../../include/ISceneNode.h" />
+		<Unit filename="../../include/ISceneNodeAnimator.h" />
+		<Unit filename="../../include/ISceneNodeAnimatorCameraFPS.h" />
+		<Unit filename="../../include/ISceneNodeAnimatorCameraMaya.h" />
+		<Unit filename="../../include/ISceneNodeAnimatorCollisionResponse.h" />
+		<Unit filename="../../include/ISceneNodeAnimatorFactory.h" />
+		<Unit filename="../../include/ISceneNodeFactory.h" />
+		<Unit filename="../../include/ISceneUserDataSerializer.h" />
+		<Unit filename="../../include/IShaderConstantSetCallBack.h" />
+		<Unit filename="../../include/IShadowVolumeSceneNode.h" />
+		<Unit filename="../../include/ISkinnedMesh.h" />
+		<Unit filename="../../include/ITerrainSceneNode.h" />
+		<Unit filename="../../include/ITextSceneNode.h" />
+		<Unit filename="../../include/ITexture.h" />
+		<Unit filename="../../include/ITimer.h" />
+		<Unit filename="../../include/ITriangleSelector.h" />
+		<Unit filename="../../include/IVertexBuffer.h" />
+		<Unit filename="../../include/IVideoDriver.h" />
+		<Unit filename="../../include/IVideoModeList.h" />
+		<Unit filename="../../include/IVolumeLightSceneNode.h" />
+		<Unit filename="../../include/IWriteFile.h" />
+		<Unit filename="../../include/IXMLReader.h" />
+		<Unit filename="../../include/IXMLWriter.h" />
+		<Unit filename="../../include/IrrCompileConfig.h" />
+		<Unit filename="../../include/IrrlichtDevice.h" />
+		<Unit filename="../../include/Keycodes.h" />
+		<Unit filename="../../include/S3DVertex.h" />
+		<Unit filename="../../include/SAnimatedMesh.h" />
+		<Unit filename="../../include/SColor.h" />
+		<Unit filename="../../include/SExposedVideoData.h" />
+		<Unit filename="../../include/SIrrCreationParameters.h" />
+		<Unit filename="../../include/SKeyMap.h" />
+		<Unit filename="../../include/SLight.h" />
+		<Unit filename="../../include/SMaterial.h" />
+		<Unit filename="../../include/SMaterialLayer.h" />
+		<Unit filename="../../include/SMesh.h" />
+		<Unit filename="../../include/SMeshBuffer.h" />
+		<Unit filename="../../include/SMeshBufferLightMap.h" />
+		<Unit filename="../../include/SMeshBufferTangents.h" />
+		<Unit filename="../../include/SParticle.h" />
+		<Unit filename="../../include/SSharedMeshBuffer.h" />
+		<Unit filename="../../include/SSkinMeshBuffer.h" />
+		<Unit filename="../../include/SVertexIndex.h" />
+		<Unit filename="../../include/SVertexManipulator.h" />
+		<Unit filename="../../include/SViewFrustum.h" />
+		<Unit filename="../../include/SceneParameters.h" />
+		<Unit filename="../../include/aabbox3d.h" />
+		<Unit filename="../../include/coreutil.h" />
+		<Unit filename="../../include/dimension2d.h" />
+		<Unit filename="../../include/fast_atof.h" />
+		<Unit filename="../../include/heapsort.h" />
+		<Unit filename="../../include/irrAllocator.h" />
+		<Unit filename="../../include/irrArray.h" />
+		<Unit filename="../../include/irrList.h" />
+		<Unit filename="../../include/irrMap.h" />
+		<Unit filename="../../include/irrMath.h" />
+		<Unit filename="../../include/irrString.h" />
+		<Unit filename="../../include/irrTypes.h" />
+		<Unit filename="../../include/irrXML.h" />
+		<Unit filename="../../include/irrlicht.h" />
+		<Unit filename="../../include/irrpack.h" />
+		<Unit filename="../../include/irrunpack.h" />
+		<Unit filename="../../include/leakHunter.h" />
+		<Unit filename="../../include/line2d.h" />
+		<Unit filename="../../include/line3d.h" />
+		<Unit filename="../../include/matrix4.h" />
+		<Unit filename="../../include/path.h" />
+		<Unit filename="../../include/plane3d.h" />
+		<Unit filename="../../include/position2d.h" />
+		<Unit filename="../../include/quaternion.h" />
+		<Unit filename="../../include/rect.h" />
+		<Unit filename="../../include/triangle3d.h" />
+		<Unit filename="../../include/vector2d.h" />
+		<Unit filename="../../include/vector3d.h" />
+		<Unit filename="../../readme.txt" />
 		<Unit filename="BuiltInFont.h" />
 		<Unit filename="C3DSMeshFileLoader.cpp" />
 		<Unit filename="C3DSMeshFileLoader.h" />
@@ -635,6 +635,24 @@
 		<Unit filename="CColorConverter.h" />
 		<Unit filename="CCubeSceneNode.cpp" />
 		<Unit filename="CCubeSceneNode.h" />
+		<Unit filename="CD3D11CallBridge.cpp" />
+		<Unit filename="CD3D11CallBridge.h" />
+		<Unit filename="CD3D11Driver.cpp" />
+		<Unit filename="CD3D11Driver.h" />
+		<Unit filename="CD3D11FixedPipelineRenderer.cpp" />
+		<Unit filename="CD3D11FixedPipelineRenderer.h" />
+		<Unit filename="CD3D11HardwareBuffer.cpp" />
+		<Unit filename="CD3D11HardwareBuffer.h" />
+		<Unit filename="CD3D11MaterialRenderer.cpp" />
+		<Unit filename="CD3D11MaterialRenderer.h" />
+		<Unit filename="CD3D11NormalMapRenderer.cpp" />
+		<Unit filename="CD3D11NormalMapRenderer.h" />
+		<Unit filename="CD3D11ParallaxMapRenderer.cpp" />
+		<Unit filename="CD3D11ParallaxMapRenderer.h" />
+		<Unit filename="CD3D11Texture.cpp" />
+		<Unit filename="CD3D11Texture.h" />
+		<Unit filename="CD3D11VertexDescriptor.cpp" />
+		<Unit filename="CD3D11VertexDescriptor.h" />
 		<Unit filename="CD3D8Driver.cpp" />
 		<Unit filename="CD3D8Driver.h" />
 		<Unit filename="CD3D8MaterialRenderer.h" />
@@ -684,6 +702,7 @@
 		<Unit filename="CGUIButton.cpp" />
 		<Unit filename="CGUIButton.h" />
 		<Unit filename="CGUICheckBox.cpp" />
+		<Unit filename="CGUICheckBox.h" />
 		<Unit filename="CGUICheckbox.h" />
 		<Unit filename="CGUIColorSelectDialog.cpp" />
 		<Unit filename="CGUIColorSelectDialog.h" />
@@ -775,8 +794,12 @@
 		<Unit filename="CImageWriterPSD.h" />
 		<Unit filename="CImageWriterTGA.cpp" />
 		<Unit filename="CImageWriterTGA.h" />
+		<Unit filename="CInstancedMeshSceneNode.cpp" />
+		<Unit filename="CInstancedMeshSceneNode.h" />
 		<Unit filename="CIrrDeviceConsole.cpp" />
 		<Unit filename="CIrrDeviceConsole.h" />
+		<Unit filename="CIrrDeviceFB.cpp" />
+		<Unit filename="CIrrDeviceFB.h" />
 		<Unit filename="CIrrDeviceLinux.cpp" />
 		<Unit filename="CIrrDeviceLinux.h" />
 		<Unit filename="CIrrDeviceSDL.cpp" />
@@ -992,6 +1015,8 @@
 		<Unit filename="CTriangleBBSelector.h" />
 		<Unit filename="CTriangleSelector.cpp" />
 		<Unit filename="CTriangleSelector.h" />
+		<Unit filename="CVertexDescriptor.cpp" />
+		<Unit filename="CVertexDescriptor.h" />
 		<Unit filename="CVideoModeList.cpp" />
 		<Unit filename="CVideoModeList.h" />
 		<Unit filename="CVolumeLightSceneNode.cpp" />
@@ -1019,304 +1044,308 @@
 		<Unit filename="IBurningShader.h" />
 		<Unit filename="IDepthBuffer.h" />
 		<Unit filename="IImagePresenter.h" />
+		<Unit filename="ISceneNodeAnimatorFinishing.h" />
 		<Unit filename="ITriangleRenderer.h" />
 		<Unit filename="IZBuffer.h" />
 		<Unit filename="Irrlicht.cpp" />
-		<Unit filename="MacOSX\CIrrDeviceMacOSX.h" />
-		<Unit filename="MacOSX\CIrrDeviceMacOSX.mm" />
+		<Unit filename="MacOSX/CIrrDeviceMacOSX.h" />
+		<Unit filename="MacOSX/CIrrDeviceMacOSX.mm" />
 		<Unit filename="Octree.h" />
 		<Unit filename="S2DVertex.h" />
 		<Unit filename="S4DVertex.h" />
 		<Unit filename="SoftwareDriver2_compile_config.h" />
 		<Unit filename="SoftwareDriver2_helper.h" />
-		<Unit filename="aesGladman\aes.h" />
-		<Unit filename="aesGladman\aescrypt.cpp" />
-		<Unit filename="aesGladman\aeskey.cpp" />
-		<Unit filename="aesGladman\aesopt.h" />
-		<Unit filename="aesGladman\aestab.cpp" />
-		<Unit filename="aesGladman\fileenc.cpp" />
-		<Unit filename="aesGladman\fileenc.h" />
-		<Unit filename="aesGladman\hmac.cpp" />
-		<Unit filename="aesGladman\hmac.h" />
-		<Unit filename="aesGladman\prng.cpp" />
-		<Unit filename="aesGladman\prng.h" />
-		<Unit filename="aesGladman\pwd2key.cpp" />
-		<Unit filename="aesGladman\pwd2key.h" />
-		<Unit filename="aesGladman\sha1.cpp" />
-		<Unit filename="aesGladman\sha1.h" />
-		<Unit filename="aesGladman\sha2.cpp" />
-		<Unit filename="aesGladman\sha2.h" />
-		<Unit filename="bzip2\blocksort.c">
+		<Unit filename="aesGladman/aes.h" />
+		<Unit filename="aesGladman/aescrypt.cpp" />
+		<Unit filename="aesGladman/aeskey.cpp" />
+		<Unit filename="aesGladman/aesopt.h" />
+		<Unit filename="aesGladman/aestab.cpp" />
+		<Unit filename="aesGladman/fileenc.cpp" />
+		<Unit filename="aesGladman/fileenc.h" />
+		<Unit filename="aesGladman/hmac.cpp" />
+		<Unit filename="aesGladman/hmac.h" />
+		<Unit filename="aesGladman/prng.cpp" />
+		<Unit filename="aesGladman/prng.h" />
+		<Unit filename="aesGladman/pwd2key.cpp" />
+		<Unit filename="aesGladman/pwd2key.h" />
+		<Unit filename="aesGladman/sha1.cpp" />
+		<Unit filename="aesGladman/sha1.h" />
+		<Unit filename="aesGladman/sha2.cpp" />
+		<Unit filename="aesGladman/sha2.h" />
+		<Unit filename="bzip2/blocksort.c">
 			<Option compilerVar="CC" />
 		</Unit>
-		<Unit filename="bzip2\bzcompress.c">
+		<Unit filename="bzip2/bzcompress.c">
 			<Option compilerVar="CC" />
 		</Unit>
-		<Unit filename="bzip2\bzlib.c">
+		<Unit filename="bzip2/bzlib.c">
 			<Option compilerVar="CC" />
 		</Unit>
-		<Unit filename="bzip2\bzlib.h" />
-		<Unit filename="bzip2\bzlib_private.h" />
-		<Unit filename="bzip2\crctable.c">
+		<Unit filename="bzip2/bzlib.h" />
+		<Unit filename="bzip2/bzlib_private.h" />
+		<Unit filename="bzip2/crctable.c">
 			<Option compilerVar="CC" />
 		</Unit>
-		<Unit filename="bzip2\decompress.c">
+		<Unit filename="bzip2/decompress.c">
 			<Option compilerVar="CC" />
 		</Unit>
-		<Unit filename="bzip2\huffman.c">
+		<Unit filename="bzip2/huffman.c">
 			<Option compilerVar="CC" />
 		</Unit>
-		<Unit filename="bzip2\randtable.c">
+		<Unit filename="bzip2/randtable.c">
 			<Option compilerVar="CC" />
 		</Unit>
 		<Unit filename="dmfsupport.h" />
 		<Unit filename="glext.h" />
+		<Unit filename="glxext.h" />
 		<Unit filename="irrXML.cpp" />
-		<Unit filename="jpeglib\cderror.h" />
-		<Unit filename="jpeglib\jaricom.c">
+		<Unit filename="jpeglib/cderror.h" />
+		<Unit filename="jpeglib/jaricom.c">
 			<Option compilerVar="CC" />
 		</Unit>
-		<Unit filename="jpeglib\jcapimin.c">
+		<Unit filename="jpeglib/jcapimin.c">
 			<Option compilerVar="CC" />
 		</Unit>
-		<Unit filename="jpeglib\jcapistd.c">
+		<Unit filename="jpeglib/jcapistd.c">
 			<Option compilerVar="CC" />
 		</Unit>
-		<Unit filename="jpeglib\jcarith.c">
+		<Unit filename="jpeglib/jcarith.c">
 			<Option compilerVar="CC" />
 		</Unit>
-		<Unit filename="jpeglib\jccoefct.c">
+		<Unit filename="jpeglib/jccoefct.c">
 			<Option compilerVar="CC" />
 		</Unit>
-		<Unit filename="jpeglib\jccolor.c">
+		<Unit filename="jpeglib/jccolor.c">
 			<Option compilerVar="CC" />
 		</Unit>
-		<Unit filename="jpeglib\jcdctmgr.c">
+		<Unit filename="jpeglib/jcdctmgr.c">
 			<Option compilerVar="CC" />
 		</Unit>
-		<Unit filename="jpeglib\jchuff.c">
+		<Unit filename="jpeglib/jchuff.c">
 			<Option compilerVar="CC" />
 		</Unit>
-		<Unit filename="jpeglib\jchuff.h" />
-		<Unit filename="jpeglib\jcinit.c">
+		<Unit filename="jpeglib/jchuff.h" />
+		<Unit filename="jpeglib/jcinit.c">
 			<Option compilerVar="CC" />
 		</Unit>
-		<Unit filename="jpeglib\jcmainct.c">
+		<Unit filename="jpeglib/jcmainct.c">
 			<Option compilerVar="CC" />
 		</Unit>
-		<Unit filename="jpeglib\jcmarker.c">
+		<Unit filename="jpeglib/jcmarker.c">
 			<Option compilerVar="CC" />
 		</Unit>
-		<Unit filename="jpeglib\jcmaster.c">
+		<Unit filename="jpeglib/jcmaster.c">
 			<Option compilerVar="CC" />
 		</Unit>
-		<Unit filename="jpeglib\jcomapi.c">
+		<Unit filename="jpeglib/jcomapi.c">
 			<Option compilerVar="CC" />
 		</Unit>
-		<Unit filename="jpeglib\jconfig.h" />
-		<Unit filename="jpeglib\jcparam.c">
+		<Unit filename="jpeglib/jconfig.h" />
+		<Unit filename="jpeglib/jcparam.c">
 			<Option compilerVar="CC" />
 		</Unit>
-		<Unit filename="jpeglib\jcprepct.c">
+		<Unit filename="jpeglib/jcprepct.c">
 			<Option compilerVar="CC" />
 		</Unit>
-		<Unit filename="jpeglib\jcsample.c">
+		<Unit filename="jpeglib/jcsample.c">
 			<Option compilerVar="CC" />
 		</Unit>
-		<Unit filename="jpeglib\jctrans.c">
+		<Unit filename="jpeglib/jctrans.c">
 			<Option compilerVar="CC" />
 		</Unit>
-		<Unit filename="jpeglib\jdapimin.c">
+		<Unit filename="jpeglib/jdapimin.c">
 			<Option compilerVar="CC" />
 		</Unit>
-		<Unit filename="jpeglib\jdapistd.c">
+		<Unit filename="jpeglib/jdapistd.c">
 			<Option compilerVar="CC" />
 		</Unit>
-		<Unit filename="jpeglib\jdarith.c">
+		<Unit filename="jpeglib/jdarith.c">
 			<Option compilerVar="CC" />
 		</Unit>
-		<Unit filename="jpeglib\jdatadst.c">
+		<Unit filename="jpeglib/jdatadst.c">
 			<Option compilerVar="CC" />
 		</Unit>
-		<Unit filename="jpeglib\jdatasrc.c">
+		<Unit filename="jpeglib/jdatasrc.c">
 			<Option compilerVar="CC" />
 		</Unit>
-		<Unit filename="jpeglib\jdcoefct.c">
+		<Unit filename="jpeglib/jdcoefct.c">
 			<Option compilerVar="CC" />
 		</Unit>
-		<Unit filename="jpeglib\jdcolor.c">
+		<Unit filename="jpeglib/jdcolor.c">
 			<Option compilerVar="CC" />
 		</Unit>
-		<Unit filename="jpeglib\jdct.h" />
-		<Unit filename="jpeglib\jddctmgr.c">
+		<Unit filename="jpeglib/jdct.h" />
+		<Unit filename="jpeglib/jddctmgr.c">
 			<Option compilerVar="CC" />
 		</Unit>
-		<Unit filename="jpeglib\jdhuff.c">
+		<Unit filename="jpeglib/jdhuff.c">
 			<Option compilerVar="CC" />
 		</Unit>
-		<Unit filename="jpeglib\jdhuff.h" />
-		<Unit filename="jpeglib\jdinput.c">
+		<Unit filename="jpeglib/jdhuff.h" />
+		<Unit filename="jpeglib/jdinput.c">
 			<Option compilerVar="CC" />
 		</Unit>
-		<Unit filename="jpeglib\jdmainct.c">
+		<Unit filename="jpeglib/jdmainct.c">
 			<Option compilerVar="CC" />
 		</Unit>
-		<Unit filename="jpeglib\jdmarker.c">
+		<Unit filename="jpeglib/jdmarker.c">
 			<Option compilerVar="CC" />
 		</Unit>
-		<Unit filename="jpeglib\jdmaster.c">
+		<Unit filename="jpeglib/jdmaster.c">
 			<Option compilerVar="CC" />
 		</Unit>
-		<Unit filename="jpeglib\jdmerge.c">
+		<Unit filename="jpeglib/jdmerge.c">
 			<Option compilerVar="CC" />
 		</Unit>
-		<Unit filename="jpeglib\jdpostct.c">
+		<Unit filename="jpeglib/jdpostct.c">
 			<Option compilerVar="CC" />
 		</Unit>
-		<Unit filename="jpeglib\jdsample.c">
+		<Unit filename="jpeglib/jdsample.c">
 			<Option compilerVar="CC" />
 		</Unit>
-		<Unit filename="jpeglib\jdtrans.c">
+		<Unit filename="jpeglib/jdtrans.c">
 			<Option compilerVar="CC" />
 		</Unit>
-		<Unit filename="jpeglib\jerror.c">
+		<Unit filename="jpeglib/jerror.c">
 			<Option compilerVar="CC" />
 		</Unit>
-		<Unit filename="jpeglib\jerror.h" />
-		<Unit filename="jpeglib\jfdctflt.c">
+		<Unit filename="jpeglib/jerror.h" />
+		<Unit filename="jpeglib/jfdctflt.c">
 			<Option compilerVar="CC" />
 		</Unit>
-		<Unit filename="jpeglib\jfdctfst.c">
+		<Unit filename="jpeglib/jfdctfst.c">
 			<Option compilerVar="CC" />
 		</Unit>
-		<Unit filename="jpeglib\jfdctint.c">
+		<Unit filename="jpeglib/jfdctint.c">
 			<Option compilerVar="CC" />
 		</Unit>
-		<Unit filename="jpeglib\jidctflt.c">
+		<Unit filename="jpeglib/jidctflt.c">
 			<Option compilerVar="CC" />
 		</Unit>
-		<Unit filename="jpeglib\jidctfst.c">
+		<Unit filename="jpeglib/jidctfst.c">
 			<Option compilerVar="CC" />
 		</Unit>
-		<Unit filename="jpeglib\jidctint.c">
+		<Unit filename="jpeglib/jidctint.c">
 			<Option compilerVar="CC" />
 		</Unit>
-		<Unit filename="jpeglib\jinclude.h" />
-		<Unit filename="jpeglib\jmemmgr.c">
+		<Unit filename="jpeglib/jinclude.h" />
+		<Unit filename="jpeglib/jmemmgr.c">
 			<Option compilerVar="CC" />
 		</Unit>
-		<Unit filename="jpeglib\jmemnobs.c">
+		<Unit filename="jpeglib/jmemnobs.c">
 			<Option compilerVar="CC" />
 		</Unit>
-		<Unit filename="jpeglib\jmemsys.h" />
-		<Unit filename="jpeglib\jmorecfg.h" />
-		<Unit filename="jpeglib\jpegint.h" />
-		<Unit filename="jpeglib\jpeglib.h" />
-		<Unit filename="jpeglib\jquant1.c">
+		<Unit filename="jpeglib/jmemsys.h" />
+		<Unit filename="jpeglib/jmorecfg.h" />
+		<Unit filename="jpeglib/jpegint.h" />
+		<Unit filename="jpeglib/jpeglib.h" />
+		<Unit filename="jpeglib/jquant1.c">
 			<Option compilerVar="CC" />
 		</Unit>
-		<Unit filename="jpeglib\jquant2.c">
+		<Unit filename="jpeglib/jquant2.c">
 			<Option compilerVar="CC" />
 		</Unit>
-		<Unit filename="jpeglib\jutils.c">
+		<Unit filename="jpeglib/jutils.c">
 			<Option compilerVar="CC" />
 		</Unit>
-		<Unit filename="jpeglib\jversion.h" />
+		<Unit filename="jpeglib/jversion.h" />
 		<Unit filename="leakHunter.cpp" />
-		<Unit filename="libpng\png.c">
+		<Unit filename="libpng/png.c">
 			<Option compilerVar="CC" />
 		</Unit>
-		<Unit filename="libpng\png.h" />
-		<Unit filename="libpng\pngconf.h" />
-		<Unit filename="libpng\pngerror.c">
+		<Unit filename="libpng/png.h" />
+		<Unit filename="libpng/pngconf.h" />
+		<Unit filename="libpng/pngerror.c">
 			<Option compilerVar="CC" />
 		</Unit>
-		<Unit filename="libpng\pngget.c">
+		<Unit filename="libpng/pngget.c">
 			<Option compilerVar="CC" />
 		</Unit>
-		<Unit filename="libpng\pngmem.c">
+		<Unit filename="libpng/pngmem.c">
 			<Option compilerVar="CC" />
 		</Unit>
-		<Unit filename="libpng\pngpread.c">
+		<Unit filename="libpng/pngpread.c">
 			<Option compilerVar="CC" />
 		</Unit>
-		<Unit filename="libpng\pngread.c">
+		<Unit filename="libpng/pngread.c">
 			<Option compilerVar="CC" />
 		</Unit>
-		<Unit filename="libpng\pngrio.c">
+		<Unit filename="libpng/pngrio.c">
 			<Option compilerVar="CC" />
 		</Unit>
-		<Unit filename="libpng\pngrtran.c">
+		<Unit filename="libpng/pngrtran.c">
 			<Option compilerVar="CC" />
 		</Unit>
-		<Unit filename="libpng\pngrutil.c">
+		<Unit filename="libpng/pngrutil.c">
 			<Option compilerVar="CC" />
 		</Unit>
-		<Unit filename="libpng\pngset.c">
+		<Unit filename="libpng/pngset.c">
 			<Option compilerVar="CC" />
 		</Unit>
-		<Unit filename="libpng\pngtrans.c">
+		<Unit filename="libpng/pngtrans.c">
 			<Option compilerVar="CC" />
 		</Unit>
-		<Unit filename="libpng\pngwio.c">
+		<Unit filename="libpng/pngwio.c">
 			<Option compilerVar="CC" />
 		</Unit>
-		<Unit filename="libpng\pngwrite.c">
+		<Unit filename="libpng/pngwrite.c">
 			<Option compilerVar="CC" />
 		</Unit>
-		<Unit filename="libpng\pngwtran.c">
+		<Unit filename="libpng/pngwtran.c">
 			<Option compilerVar="CC" />
 		</Unit>
-		<Unit filename="libpng\pngwutil.c">
+		<Unit filename="libpng/pngwutil.c">
 			<Option compilerVar="CC" />
 		</Unit>
-		<Unit filename="lzma\LzmaDec.c">
+		<Unit filename="lzma/LzmaDec.c">
 			<Option compilerVar="CC" />
 		</Unit>
-		<Unit filename="lzma\LzmaDec.h" />
-		<Unit filename="lzma\Types.h" />
+		<Unit filename="lzma/LzmaDec.h" />
+		<Unit filename="lzma/Types.h" />
 		<Unit filename="os.cpp" />
 		<Unit filename="os.h" />
+		<Unit filename="resource.h" />
 		<Unit filename="utf8.cpp" />
-		<Unit filename="zlib\adler32.c">
+		<Unit filename="wglext.h" />
+		<Unit filename="zlib/adler32.c">
 			<Option compilerVar="CC" />
 		</Unit>
-		<Unit filename="zlib\compress.c">
+		<Unit filename="zlib/compress.c">
 			<Option compilerVar="CC" />
 		</Unit>
-		<Unit filename="zlib\crc32.c">
+		<Unit filename="zlib/crc32.c">
 			<Option compilerVar="CC" />
 		</Unit>
-		<Unit filename="zlib\crc32.h" />
-		<Unit filename="zlib\deflate.c">
+		<Unit filename="zlib/crc32.h" />
+		<Unit filename="zlib/deflate.c">
 			<Option compilerVar="CC" />
 		</Unit>
-		<Unit filename="zlib\deflate.h" />
-		<Unit filename="zlib\inffast.c">
+		<Unit filename="zlib/deflate.h" />
+		<Unit filename="zlib/inffast.c">
 			<Option compilerVar="CC" />
 		</Unit>
-		<Unit filename="zlib\inffast.h" />
-		<Unit filename="zlib\inffixed.h" />
-		<Unit filename="zlib\inflate.c">
+		<Unit filename="zlib/inffast.h" />
+		<Unit filename="zlib/inffixed.h" />
+		<Unit filename="zlib/inflate.c">
 			<Option compilerVar="CC" />
 		</Unit>
-		<Unit filename="zlib\inftrees.c">
+		<Unit filename="zlib/inftrees.c">
 			<Option compilerVar="CC" />
 		</Unit>
-		<Unit filename="zlib\inftrees.h" />
-		<Unit filename="zlib\trees.c">
+		<Unit filename="zlib/inftrees.h" />
+		<Unit filename="zlib/trees.c">
 			<Option compilerVar="CC" />
 		</Unit>
-		<Unit filename="zlib\trees.h" />
-		<Unit filename="zlib\uncompr.c">
+		<Unit filename="zlib/trees.h" />
+		<Unit filename="zlib/uncompr.c">
 			<Option compilerVar="CC" />
 		</Unit>
-		<Unit filename="zlib\zconf.h" />
-		<Unit filename="zlib\zlib.h" />
-		<Unit filename="zlib\zutil.c">
+		<Unit filename="zlib/zconf.h" />
+		<Unit filename="zlib/zlib.h" />
+		<Unit filename="zlib/zutil.c">
 			<Option compilerVar="CC" />
 		</Unit>
-		<Unit filename="zlib\zutil.h" />
+		<Unit filename="zlib/zutil.h" />
 		<Extensions>
 			<code_completion />
 			<debugger />
