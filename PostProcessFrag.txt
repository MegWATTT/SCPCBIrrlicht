varying vec4 tcoords;
varying float iminBlur;
varying float imaxBlur;

uniform sampler2D Texture0;
uniform sampler2D Texture1;

//uniform float gammaFactor;
//uniform float blurStrength;
void main(void) {
	vec2 ntcoords = tcoords.xy;
	
	float dx = ntcoords.x-0.5;
	float dy = ntcoords.y-0.5;
	float dist = max(abs(dx),abs(dy));
	//float dist = sqrt(dx*dx+dy*dy);
	dist *= dist * dist * (imaxBlur-iminBlur);
	dist += iminBlur;
	
	vec3 zbuff = texture2D(Texture1, clamp(ntcoords,0.0,1.0));
	float zdist = clamp(((zbuff.x*255)+(zbuff.y*255.0*255.0)+(zbuff.z*255.0*255.0*255.0))/(255.0*255.0*255.0),0.0,1.0);
	vec3 centerzbuff = texture2D(Texture1, vec2(0.5));
	float centerzdist = ((centerzbuff.x*255)+(centerzbuff.y*255.0*255.0)+(centerzbuff.z*255.0*255.0*255.0))/(255.0*255.0*255.0);
	
	dist += abs(zdist-centerzdist)*2.0;
	
	vec4 color = texture2D(Texture0, clamp(ntcoords,0.0,1.0)) * 0.1;
	
	dist+=noise1((color.r+color.g-color.b)*100000.0)*10.0;
	
	dist*=0.001;
	
	color += texture2D(Texture0, clamp(ntcoords+vec2(dist),0.0,1.0)) * 0.225;
	color += texture2D(Texture0, clamp(ntcoords-vec2(dist),0.0,1.0)) * 0.225;
	color += texture2D(Texture0, clamp(ntcoords+vec2(dist,-dist),0.0,1.0)) * 0.225;
	color += texture2D(Texture0, clamp(ntcoords-vec2(dist,-dist),0.0,1.0)) * 0.225;
	
	color = pow(color,vec4(1.0/1.5));
	
	gl_FragColor = vec4(color.xyz,1.0);
}